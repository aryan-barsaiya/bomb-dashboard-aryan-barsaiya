{"version":3,"sources":["hooks/useBondStats.ts","views/Boardroom/components/ProgressCountdown.tsx","hooks/boardroom/useClaimRewardCheck.ts","hooks/boardroom/useWithdrawCheck.ts","hooks/useStakedBalanceOnBoardroom.ts","hooks/useTotalValueLocked.ts","hooks/useEarnings.ts","hooks/useHarvest.ts","hooks/useBank.ts","hooks/useStatsForPool.ts","hooks/useRedeemOnBoardroom.ts","hooks/useCurrentEpoch.ts","hooks/useFetchBoardroomAPR.ts","hooks/useCashPriceInEstimatedTWAP.ts","hooks/useTreasuryAllocationTimes.ts","hooks/useTotalStakedOnBoardroom.ts","hooks/useCashPriceInLastTWAP.ts","bomb-finance/constants.ts","views/Dashboard/Components/Table.js","hooks/useLastEpoch.ts","views/Dashboard/Dashboard.js","hooks/useHandleTransactionReceipt.ts"],"names":["useBondStats","useState","stat","setStat","slowRefresh","useRefresh","bombFinance","useBombFinance","useEffect","a","getBondStat","console","error","fetchBondPrice","StyledCountdown","styled","p","props","theme","color","grey","StyledProgressOuter","div","StyledProgress","progress","StyledCardContentInner","spacing","ProgressCountdown","base","deadline","hideBar","percentage","description","Date","now","getTime","key","date","renderer","countdownProps","days","hours","minutes","seconds","h","String","m","s","padStart","useClaimRewardCheck","canClaimReward","setCanClaimReward","isUnlocked","canUserClaimRewardFromBoardroom","canUserClaimReward","useWithdrawCheck","canWithdraw","setCanWithdraw","canUserUnstakeFromBoardroom","canUserWithdraw","useStakedBalanceOnBoardroom","BigNumber","from","balance","setBalance","getStakedSharesOnBoardroom","fetchBalance","useTotalValueLocked","totalValueLocked","setTotalValueLocked","getTotalValueLocked","fetchTVL","useEarnings","poolName","earnTokenName","poolId","useCallback","earnedFromBank","myAccount","catch","err","stack","refreshBalance","setInterval","config","refreshInterval","clearInterval","useHarvest","bank","handleTransactionReceipt","useHandleTransactionReceipt","onReward","harvest","contract","useBank","contractName","useContext","BanksContext","banks","find","useStatsForPool","poolAPRs","setPoolAPRs","fetchAPRsForPool","getPoolAPRs","useRedeemOnBoardroom","onRedeem","alertDesc","exitFromBoardroom","useCurrentEpoch","currentEpoch","setCurrentEpoch","getCurrentEpoch","fetchCurrentEpoch","useFetchBoardroomAPR","apr","setApr","getBoardroomAPR","fetchBoardroomAPR","useCashPriceInEstimatedTWAP","getBombStatInEstimatedTWAP","fetchCashPrice","useTreasuryAllocationTimes","to","time","setTime","getTreasuryNextAllocationTime","then","useTotalStakedOnBoardroom","totalStaked","setTotalStaked","getTotalStakedInBoardroom","fetchTotalStaked","useCashPriceInLastTWAP","price","setPrice","getBombPriceInLastTWAP","DECIMALS_18","pow","BOND_REDEEM_PRICE","BOND_REDEEM_PRICE_BN","mul","Table","table","Th","th","Td","td","Tr","tr","BasicTable","bombStats","useBombStats","bShareStats","usebShareStats","tBondStats","bombPriceInDollars","useMemo","Number","priceInDollars","toFixed","bShareTotalSupply","totalSupply","bShareCirculatingSupply","circulatingSupply","bombCirculatingSupply","bombTotalSupply","bombPriceInBNB","tokenInFtm","tBondPriceInDollars","tBondPriceInBNB","tBondCirculatingSupply","tBondTotalSupply","TokenSymbol","symbol","size","roundAndFormatNumber","useLastEpoch","lastEpoch","setLastEpoch","getLastEpoch","fetchlastEpoch","Container","Card","Title","h2","Dashboard","window","scrollTo","TVL","cashPrice","stakedBalance","scalingFactor","earnings","Bank","cashStat","addTransaction","useTransactionAdder","bondBalance","useTokenBalance","BBOND","isBondRedeemable","gt","bondStat","tShareStats","useShareStats","uselastEpoch","bShareBank","bombBTCBBank","statsOnPoolBombBTCB","address","log","statsOnPoolBShare","boardroomAPR","liveEpochValue","tokenStats","tokenPriceInDollars","earnedInDollars","getDisplayBalance","handleBuyBonds","amount","buyBonds","tx","summary","useApprove","BSHARE","contracts","Boardroom","approveBSHAREStatus","approveBSHARE","BBOMBBTCB","approveBBOMB_BTCBStatus","approveBBOMB_BTCB","handleRedeemBonds","redeemBonds","Nav","variant","style","width","display","justifyContent","margin","flexDirection","textAlign","padding","fontSize","fontWeight","Typography","moment","toDate","end","separator","prefix","float","marginRight","marginLeft","height","marginBottom","href","cursor","fontFamily","paddingTop","paddingBottom","backgroundImage","marginTop","textDecoration","className","flex","Grid","container","rowSpacing","item","xs","diplay","backgroundColor","border","borderRadius","disabled","ApprovalState","NOT_APPROVED","onClick","eq","alignContent","alignItems","background","dailyAPR","Footer","addPopup","useAddPopup","promise","message","includes","toLowerCase","slice"],"mappings":"qLAwBeA,IAnBM,WACnB,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAAeC,cAAfD,YACDE,EAAcC,cAapB,OAXAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIN,EAFJ,SAEkBG,EAAYI,cAF9B,kFAIIC,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdC,KACC,CAACV,EAASG,EAAaF,IAEnBF,I,wFCwBHY,EAAkBC,IAAOC,EAAV,gHAGP,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAI1CC,EAAsBN,IAAOO,IAAV,uGAIT,SAACL,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAG5CG,EAAiBR,IAAOO,IAAV,wGACT,SAACL,GAAD,OAAWA,EAAMO,YAGZ,SAACP,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,KAAK,QAG5CK,EAAyBV,IAAOO,IAAV,0KAMZ,SAACL,GAAD,OAAWA,EAAMC,MAAMQ,QAAQ,MAAQ,SAACT,GAAD,OAAWA,EAAMC,MAAMQ,QAAQ,MAGvEC,IAhE6C,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,QACtEC,GADgG,EAAjBC,YAEnFC,KAAKC,OAASL,EAASM,UACnB,KACEF,KAAKC,MAAQN,EAAKO,YAAcN,EAASM,UAAYP,EAAKO,WAAc,KAahF,OAEE,kBAACV,EAAD,KAEE,kBAAC,IAAD,CAAWW,KAAK,IAAIH,MAAOE,UAAWE,KAAMR,EAAUS,SAfhC,SAACC,GACzB,IAAOC,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,QAASC,EAAWJ,EAAXI,QACvBC,EAAIC,OAAc,GAAPL,EAAYC,GACvBK,EAAID,OAAOH,GACXK,EAAIF,OAAOF,GACjB,OACE,kBAAC7B,EAAD,KACG8B,EAAEI,SAAS,EAAG,KADjB,IACwBF,EAAEE,SAAS,EAAG,KADtC,IAC6CD,EAAEC,SAAS,EAAG,SAS1DlB,EACC,GAEA,kBAACT,EAAD,KACE,kBAACE,EAAD,CAAgBC,SAAUO,Q,+FCXrBkB,IAtBa,WAC1B,IAAO7C,EAAeC,cAAfD,YACP,EAA4CH,oBAAS,GAArD,mBAAOiD,EAAP,KAAuBC,EAAvB,KACM7C,EAAcC,cACd6C,EAAU,OAAG9C,QAAH,IAAGA,OAAH,EAAGA,EAAa8C,WAehC,OAbA5C,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEI0C,EAFJ,SAE4B7C,EAAY+C,kCAFxC,kFAII1C,QAAQC,MAAR,MAJJ,0DADc,sBAQVwC,GARW,WAAD,wBASZE,KAED,CAACF,EAAYhD,EAAaE,IAEtB4C,I,+FCGMK,IAtBU,WACvB,MAAsCtD,oBAAS,GAA/C,mBAAOuD,EAAP,KAAoBC,EAApB,KACMnD,EAAcC,cACbH,EAAeC,cAAfD,YACDgD,EAAU,OAAG9C,QAAH,IAAGA,OAAH,EAAGA,EAAa8C,WAehC,OAbA5C,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIgD,EAFJ,SAEyBnD,EAAYoD,8BAFrC,kFAII/C,QAAQC,MAAR,MAJJ,0DADc,sBAQVwC,GARW,WAAD,wBASZO,KAED,CAACP,EAAY9C,EAAaF,IAEtBoD,I,uGCEMI,IApBqB,WAClC,IAAOxD,EAAeC,cAAfD,YACP,EAA8BH,mBAAS4D,IAAUC,KAAK,IAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACM1D,EAAcC,cACd6C,EAAU,OAAG9C,QAAH,IAAGA,OAAH,EAAGA,EAAa8C,WAahC,OAZA5C,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIuD,EAFJ,SAEqB1D,EAAY2D,6BAFjC,kFAIItD,QAAQC,MAAR,MAJJ,0DADc,sBAQVwC,GARW,WAAD,wBASZc,KAED,CAAC9D,EAAagD,EAAY9C,IACtByD,I,+FCCMI,IAnBa,WAC1B,MAAgDlE,mBAAiB,GAAjE,mBAAOmE,EAAP,KAAyBC,EAAzB,KACOjE,EAAeC,cAAfD,YACDE,EAAcC,cAapB,OAXAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEI4D,EAFJ,SAE8B/D,EAAYgE,sBAF1C,kFAII3D,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQd2D,KACC,CAACF,EAAqB/D,EAAaF,IAE/BgE,I,sGCQMI,IAtBK,SAACC,EAAwBC,EAAuBC,GAClE,MAA8B1E,mBAAS4D,IAAUC,KAAK,IAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACM1D,EAAcC,cACd6C,EAAU,OAAG9C,QAAH,IAAGA,OAAH,EAAGA,EAAa8C,WAE1Bc,EAAeU,sBAAW,sBAAC,4BAAAnE,EAAA,sEACTH,EAAYuE,eAAeJ,EAAUC,EAAeC,EAAQrE,EAAYwE,WAD/D,OACzBf,EADyB,OAE/BC,EAAWD,GAFoB,2CAG9B,CAACU,EAAUC,EAAeC,EAAQrE,IAWrC,OATAE,qBAAU,WACR,GAAI4C,EAAY,CACdc,IAAea,OAAM,SAACC,GAAD,OAASrE,QAAQC,MAAMoE,EAAIC,UAEhD,IAAMC,EAAiBC,YAAYjB,EAAckB,IAAOC,iBACxD,OAAO,kBAAMC,cAAcJ,OAE5B,CAAC9B,EAAYqB,EAAUnE,EAAa4D,IAEhCH,I,kCCzBT,6BAmBewB,IAdI,SAACC,GAClB,IAAMlF,EAAcC,cACdkF,EAA2BC,cASjC,MAAO,CAACC,SAPaf,uBAAY,WAC/Ba,EACEnF,EAAYsF,QAAQJ,EAAKK,SAAUL,EAAKb,QADlB,gBAEba,EAAKd,cAFQ,iBAEcc,EAAKK,aAE1C,CAACL,EAAMlF,EAAamF,O,kCCdzB,oBASeK,IALC,SAACC,GAEf,OADgBC,qBAAWC,KAApBC,MACMC,MAAK,SAACX,GAAD,OAAUA,EAAKK,WAAaE,O,8FCiBjCK,IAjBS,SAACZ,GACvB,IAAMlF,EAAcC,cAEpB,EAAgCN,qBAAhC,mBAAOoG,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB3B,sBAAW,sBAAC,sBAAAnE,EAAA,kEACnC6F,EADmC,SACjBhG,EAAYkG,YAAYhB,GADP,6EAElC,CAAClF,EAAakF,IAOjB,OANAhF,qBAAU,WACR+F,IAAmBxB,OAAM,SAACC,GAAD,OAASrE,QAAQC,MAAR,oCAA2CoE,EAAIC,WACjF,IAAMI,EAAkBF,YAAYoB,EAAkBnB,IAAOC,iBAC7D,OAAO,kBAAMC,cAAcD,MAC1B,CAACiB,EAAahG,EAAaiG,IAEvBF,I,kCCpBT,6BAeeI,IAXc,SAACzE,GAC5B,IAAM1B,EAAcC,cACdkF,EAA2BC,cAMjC,MAAO,CAACgB,SAJa9B,uBAAY,WAC/B,IAAM+B,EAAY3E,GAAe,+BACjCyD,EAAyBnF,EAAYsG,oBAAqBD,KACzD,CAACrG,EAAa0B,EAAayD,O,uGCajBoB,IAnBU,WACvB,MAAwC5G,mBAAoB4D,IAAUC,KAAK,IAA3E,mBAAOgD,EAAP,KAAqBC,EAArB,KACMzG,EAAcC,cACbH,EAAeC,cAAfD,YAaP,OAXAI,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIsG,EAFJ,SAE0BzG,EAAY0G,kBAFtC,kFAIIrG,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdqG,KACC,CAACF,EAAiBzG,EAAaF,IAE3B0G,I,+FCEMI,IAnBc,WAC3B,MAAsBjH,mBAAiB,GAAvC,mBAAOkH,EAAP,KAAYC,EAAZ,KACM9G,EAAcC,cACbH,EAAeC,cAAfD,YAaP,OAXAI,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEI2G,EAFJ,SAEiB9G,EAAY+G,kBAF7B,kFAII1G,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQd0G,KACC,CAACF,EAAQ9G,EAAaF,IAElB+G,I,+FCIMI,IAnBqB,WAClC,MAAwBtH,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACMG,EAAcC,cACbH,EAAeC,cAAfD,YAaP,OAXAI,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIN,EAFJ,SAEkBG,EAAYkH,6BAF9B,kFAII7G,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQd6G,KACC,CAACtH,EAASG,EAAaF,IAEnBF,I,uECDMwH,IAfoB,WACjC,IAAOtH,EAAeC,cAAfD,YACP,EAAwBH,mBAAyB,CAC/C6D,KAAM,IAAI7B,KACV0F,GAAI,IAAI1F,OAFV,mBAAO2F,EAAP,KAAaC,EAAb,KAIMvH,EAAcC,cAMpB,OALAC,qBAAU,WACJF,GACFA,EAAYwH,gCAAgCC,KAAKF,KAElD,CAACvH,EAAaF,IACVwH,I,uGCQMI,IApBmB,WAChC,MAAsC/H,mBAAS4D,IAAUC,KAAK,IAA9D,mBAAOmE,EAAP,KAAoBC,EAApB,KACM5H,EAAcC,cACbH,EAAeC,cAAfD,YACDgD,EAAU,OAAG9C,QAAH,IAAGA,OAAH,EAAGA,EAAa8C,WAahC,OAXA5C,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIyH,EAFJ,SAEyB5H,EAAY6H,4BAFrC,kFAIIxH,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdwH,KACC,CAAChF,EAAYhD,EAAaE,IAEtB2H,I,sGCAMI,IAjBgB,WAC7B,MAA0BpI,mBAAoB4D,IAAUC,KAAK,IAA7D,mBAAOwE,EAAP,KAAcC,EAAd,KACMjI,EAAcC,cAEdkH,EAAiB7C,sBAAW,sBAAC,sBAAAnE,EAAA,kEACjC8H,EADiC,SAClBjI,EAAYkI,yBADM,6EAEhC,CAAClI,IAQJ,OANAE,qBAAU,WACRiH,IAAiB1C,OAAM,SAACC,GAAD,OAASrE,QAAQC,MAAR,sCAA6CoE,EAAIC,WACjF,IAAMI,EAAkBF,YAAYsC,EAAgBrC,IAAOC,iBAC3D,OAAO,kBAAMC,cAAcD,MAC1B,CAACkD,EAAUjI,EAAamH,IAEpBa,I,kCCnBT,wEAEaG,EAFb,MAE2B5E,EAAUC,KAAK,IAAI4E,IAAI,IAErCC,EAAoB,KACpBC,EAAuBH,EAAYI,IAAI,KAAKvH,IAAI,M,yQCavDwH,EAAQ/H,IAAOgI,MAAV,+DAKLC,EAAKjI,IAAOkI,GAAV,2IAQFC,EAAKnI,IAAOoI,GAAV,kKAQFC,EAAKrI,IAAOsI,GAAV,2IAiBO,SAASC,IACtB,IAAMC,EAAYC,cACZC,EAAcC,cACdC,EAAa3J,cACb4J,EAAqBC,mBACvB,kBAAON,EAAYO,OAAOP,EAAUQ,gBAAgBC,QAAQ,GAAK,OACjE,CAACT,IAECU,EAAoBJ,mBAAQ,kBAAOJ,EAAc5G,OAAO4G,EAAYS,aAAe,OAAO,CAACT,IAC3FU,EAA0BN,mBAC5B,kBAAOJ,EAAc5G,OAAO4G,EAAYW,mBAAqB,OAC7D,CAACX,IAECY,EAAwBR,mBAAQ,kBAAON,EAAY1G,OAAO0G,EAAUa,mBAAqB,OAAO,CAACb,IACjGe,EAAkBT,mBAAQ,kBAAON,EAAY1G,OAAO0G,EAAUW,aAAe,OAAO,CAACX,IACrFgB,EAAiBV,mBAAQ,kBAAON,EAAYO,OAAOP,EAAUiB,YAAYR,QAAQ,GAAK,OAAO,CAACT,IAG9FkB,EAAsBZ,mBACxB,kBAAOF,EAAaG,OAAOH,EAAWI,gBAAgBC,QAAQ,GAAK,OACnE,CAACL,IAECe,EAAkBb,mBAAQ,kBAAOF,EAAaG,OAAOH,EAAWa,YAAYR,QAAQ,GAAK,OAAO,CAACL,IACjGgB,EAAyBd,mBAC3B,kBAAOF,EAAa9G,OAAO8G,EAAWS,mBAAqB,OAC3D,CAACT,IAECiB,EAAmBf,mBAAQ,kBAAOF,EAAa9G,OAAO8G,EAAWO,aAAe,OAAO,CAACP,IAG9F,OACE,2BACA,gBAACb,EAAD,KACE,gBAACM,EAAD,KACE,2BACA,gBAACJ,EAAD,MACA,gBAACA,EAAD,uBACA,gBAACA,EAAD,qBACA,gBAACA,EAAD,eAEF,gBAACI,EAAD,KACE,0BAAI,gBAACyB,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,MACrC,gBAAC7B,EAAD,cACA,gBAACA,EAAD,KAAK8B,YAAqBX,EAAuB,IACjD,gBAACnB,EAAD,KAAK8B,YAAqBV,EAAiB,IAC3C,gBAACpB,EAAD,UAAOqB,GAAkC,SAAzC,OAAsD,2BAAtD,IAAiEX,EAAqBoB,YAAqBpB,EAAoB,GAAK,OAApI,WACA,0BAAI,gBAACiB,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,OAEvC,gBAAC3B,EAAD,KACE,0BAAI,gBAACyB,EAAA,EAAD,CAAaC,OAAO,SAASC,KAAM,MACvC,gBAAC7B,EAAD,gBACA,gBAACA,EAAD,KAAK8B,YAAqBb,EAAyB,IACvC,gBAACjB,EAAD,KAAK8B,YAAqBf,EAAmB,IAC7C,gBAACf,EAAD,SACMqB,GAAkC,SADxC,OACqD,2BADrD,MACkEX,EAAqBoB,YAAqBpB,EAAoB,GAAK,OADrI,WAGZ,0BAAI,gBAACiB,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,OAEvC,gBAAC3B,EAAD,KACE,0BAAI,gBAACyB,EAAA,EAAD,CAAaC,OAAO,QAAQC,KAAM,MACtC,gBAAC7B,EAAD,eACA,gBAACA,EAAD,KAAK8B,YAAqBL,EAAwB,GAAlD,KACY,gBAACzB,EAAD,KAAK8B,YAAqBJ,EAAkB,IAC5C,gBAAC1B,EAAD,KACKwB,GAAoC,SADzC,OACsD,2BADtD,KACkED,GAA4C,OAD9G,YAGZ,0BAAI,gBAACI,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,S,oFClG9BE,EAnBO,WACpB,MAAkChL,mBAAoB4D,IAAUC,KAAK,IAArE,mBAAOoH,EAAP,KAAkBC,EAAlB,KACM7K,EAAcC,cACbH,EAAeC,cAAfD,YAaP,OAXAI,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEI0K,EAFJ,SAEuB7K,EAAY8K,eAFnC,kFAIIzK,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdyK,KACC,CAACF,EAAc7K,EAAaF,IAExB8K,G,uOCuCHI,GAAYvK,IAAOO,IAAV,uMAOTiK,GAAOxK,IAAOO,IAAV,mRAWJkK,GAAQzK,IAAO0K,GAAV,0EA8mBIC,GAzmBG,WAAO,IAAD,EACtBlL,qBAAU,kBAAMmL,OAAOC,SAAS,EAAG,MACnC,IAAMC,EAAM1H,cACN2H,EAAYzD,cACZ0D,EAAgBnI,eAChBoI,EAAgBnC,mBAAQ,kBAAOiC,EAAYhC,OAAOgC,GAAa,OAAO,CAACA,IACvEG,EAAWzH,aAAY0H,KAAKrG,SAAUqG,KAAKxH,cAAewH,KAAKvH,QAC/DwH,EAAW5E,cACX6E,EAAiBC,eACjB/L,EAAcC,cACd+L,EAAcC,aAAe,OAACjM,QAAD,IAACA,OAAD,EAACA,EAAakM,OACzC7G,EAAaJ,aAAW2G,MAAxBvG,SACF8G,EAAmB5C,mBAAQ,kBAAMiC,EAAUY,GAAG9D,QAAuB,CAACkD,IACtEa,EAAW3M,cACXuJ,EAAYC,cACZoD,EAAcC,cACd/F,EAAeD,cACfqE,EAAY4B,IAEZC,EAAajH,YAAQ,+BACrBkH,EAAelH,YAAQ,8BAEvBmH,EAAsB7G,YAAgB4G,EAAaE,SACzDvM,QAAQwM,IAAIF,GACZ,IAAMG,EAAoBhH,YAAgB2G,GAEpCM,EAAenG,cACfe,GAAcD,cAEZtB,GAAaD,cAAbC,SACFlD,GAAcD,cAEd+J,GAAiBzD,mBAAQ,kBAAOsC,EAAWrC,OAAOqC,EAASpC,gBAAgBC,QAAQ,GAAK,OAAO,CAACmC,IAEhGoB,GAAoC,WAAvBrB,KAAKxH,cAA6BkI,EAAcrD,EAC7DiE,GAAsB3D,mBAC1B,kBAAO0D,GAAazD,OAAOyD,GAAWxD,gBAAgBC,QAAQ,GAAK,OACnE,CAACuD,KAEGrK,GAAiBD,cACjBwK,IAAmB3D,OAAO0D,IAAuB1D,OAAO4D,YAAkBzB,KAAYjC,QAAQ,GAC5FrC,GAAOD,eAAPC,GAEFgG,GAAiB/I,sBAAW,uCAChC,WAAOgJ,GAAP,eAAAnN,EAAA,sFAEqBH,QAFrB,IAEqBA,OAFrB,EAEqBA,EAAauN,SAASD,GAF3C,OAEUE,EAFV,OAGI1B,EAAe0B,EAAI,CACjBC,QAAQ,OAAD,OAASjE,OAAO8D,GAAQ5D,QAAQ,GAAhC,uBAAiD4D,EAAjD,WAJb,gDAOIjN,QAAQC,MAAR,MAPJ,yDADgC,sDAWhC,CAACN,EAAa8L,IAEhB,GAA6C4B,aAAW1N,EAAY2N,OAAQ3N,EAAY4N,UAAUC,UAAUjB,SAA5G,qBAAOkB,GAAP,MAA4BC,GAA5B,MACA,GAAqDL,aACnD1N,EAAYgO,UACZhO,EAAY4N,UAAUC,UAAUjB,SAFlC,qBAAOqB,GAAP,MAAgCC,GAAhC,MAKMC,GAAoB7J,sBAAW,uCACnC,WAAOgJ,GAAP,eAAAnN,EAAA,sFAEqBH,QAFrB,IAEqBA,OAFrB,EAEqBA,EAAaoO,YAAYd,GAF9C,OAEUE,EAFV,OAGI1B,EAAe0B,EAAI,CAAEC,QAAQ,UAAD,OAAYH,EAAZ,YAHhC,gDAKIjN,QAAQC,MAAR,MALJ,yDADmC,sDASnC,CAACN,EAAa8L,IAMhB,OACE,6BACE,kBAACd,GAAD,KACE,kBAACqD,EAAA,EAAD,MACA,kBAACpD,GAAD,CAAMqD,QAAQ,YACZ,kBAACpD,GAAD,6BACA,6BAEA,yBAAKqD,MAAO,CAAEC,MAAO,OAAQC,QAAS,OAAQC,eAAgB,gBAAiBC,OAAQ,SACrF,yBAAKJ,MAAO,CAAEC,MAAO,QACnB,kBAAC,EAAD,OAEF,yBACED,MAAO,CAAEC,MAAO,MAAOI,cAAe,SAAUC,UAAW,SAAUhO,MAAO,QAASiO,QAAS,SAE9F,uBAAGP,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,IAAKK,WAAY,QAAvD,iBACA,kBAACC,EAAA,EAAD,KAAazF,OAAOhD,IACpB,uBAAG+H,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,OACtC,6BACA,uBAAGJ,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,MACnC,IACD,kBAACtN,EAAA,EAAD,CAAmBC,KAAM4N,MAASC,SAAU3N,SAAS,EAAMD,SAAU8F,GAAI3F,YAAY,gBAEvF,uBAAG6M,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,IAAKK,WAAY,QAAvD,iBACA,6BACA,uBAAGT,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,IAAKK,WAAY,MAAOF,QAAS,QAAvE,cACc9B,IAEd,uBAAGuB,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,IAAKK,WAAY,MAAOF,QAAS,QAAvE,QACO,kBAAC,IAAD,CAASP,MAAO,CAAEQ,SAAU,QAAUK,IAAK7D,EAAK8D,UAAU,IAAIC,OAAO,OAE5E,uBAAGf,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,IAAKK,WAAY,MAAOF,QAAS,QAAvE,oBACmB,kBAACG,EAAA,EAAD,MAAczF,OAAOoB,GAAa,MAAiBlB,QAAQ,QAMpF,kBAACuB,GAAD,CAAMsD,MAAO,CAAEgB,MAAO,QAASf,MAAO,MAAOgB,YAAa,OAAQC,WAAY,MAAOC,OAAQ,UAC3F,4CAGF,0BAAMnB,MAAO,CAAEkB,WAAY,OAAQE,aAAc,SAC/C,yBAAKpB,MAAO,CAAE1N,MAAO,QAAS2N,MAAO,OAAQK,UAAW,QAASc,aAAc,QAC7E,uBAAGpB,MAAO,CAAE1N,MAAO,yBAA0BiO,QAAS,QAAUc,KAAK,4BAArE,6BAIF,yBACErB,MAAO,CACLsB,OAAQ,UACRhP,MAAO,QACPiP,WAAa,OACbf,SAAU,SACVU,WAAY,OACZM,WAAY,OACZC,cAAe,OACfnB,UAAW,SACXL,MAAO,MACPyB,gBAAiB,mEAGnB,2CAGJ,yBACE1B,MAAO,CACLC,MAAO,MACP0B,UAAW,OACXzB,QAAS,OACTgB,WAAY,OACZf,eAAgB,gBAChBG,UAAW,SAGb,yBACEN,OAAK,GACHsB,OAAQ,UACRd,SAAU,SACVF,UAAW,SACXC,QAAS,aAJN,uBAKK,WALL,sBAMI,OANJ,sBAOI,SAPJ,gCAQc,oEARd,IAWH,kBAACvE,EAAA,EAAD,CAAaC,OAAO,UAAUC,KAAM,KAEtC,uBAAG8D,MAAO,CAAE1N,MAAO,QAASsP,eAAgB,OAAQtB,UAAU,UAAYe,KAAK,8BAC5E,IADH,oBAKF,yBACErB,MAAO,CACLsB,OAAQ,UACRd,SAAU,SACVF,UAAW,SACXC,QAAS,YACTN,MAAO,MACP3N,MAAO,QACPoP,gBAAiB,qEAInB,kBAAC1F,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,KAEjC,uBAAG8D,MAAO,CAAE1N,MAAO,QAASsP,eAAgB,OAAOtB,UAAU,UAAYe,KAAK,8BAA9E,eAKJ,kBAAC3E,GAAD,CAAMqD,QAAQ,WAAWC,MAAO,CAAEC,MAAO,MAAOiB,WAAY,QAASS,UAAW,SAC9E,yBAAKE,UAAU,UACb,yBAAK7B,MAAO,CAAE8B,KAAM,MAAOtB,SAAU,SAClC,IACD,kBAACxE,EAAA,EAAD,CAAaC,OAAO,SAASC,KAAM,KAFrC,aAMA,yBAAK8D,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7C,qEACA,yBAAKH,MAAO,CAAEQ,SAAU,OAAQmB,UAAW,WAA3C,QACO,kBAAC,IAAD,CAASd,IAAK7D,EAAK8D,UAAU,IAAIC,OAAO,QAGjD,wBAAIf,MAAO,CAAE1N,MAAO,WACpB,yBAAK0N,MAAO,CAAEM,UAAW,QAASF,OAAQ,SAA1C,gBAEE,kBAACpE,EAAA,EAAD,CAAaC,OAAO,SAASC,KAAM,KAClC2C,YAAkBzF,KAGrB,kBAAC2I,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAY,GAC1B,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,0BAAMnC,MAAO,CAAEQ,SAAU,SAAzB,gBAEE,6BACA,kBAACE,EAAA,EAAD,MAAclC,EAAe,KAAKrD,QAAQ,GAA1C,KACA,+BAGJ,kBAAC4G,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,0BAAMnC,MAAO,CAAEQ,SAAU,SAAzB,eACc,6BACX3B,YAAkB3B,GAFrB,IAGE,6BAHF,WAGY2B,YAAkB3B,KAGhC,kBAAC6E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,0BAAMnC,MAAO,CAAEQ,SAAU,SAAzB,UAEE,6BACC3B,YAAkBzB,GACnB,6BAJF,UAKKwB,KAIP,yBAAKoB,MAAO,CAAEoC,OAAQ,OAAQjC,eAAgB,WAC5C,yBAAKH,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7C,yBACEH,MAAO,CACLmB,OAAQ,OACRlB,MAAO,OACP3N,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnC,OAAQ,MACR0B,KAAM,OAERU,SAAUjD,KAAwBkD,KAAcC,aAChDC,QAASnD,IAdX,iBAiBE,kBAACxD,EAAA,EAAD,CAAaC,OAAO,KAAKC,KAAM,MAEjC,yBACE8D,MAAO,CACLmB,OAAQ,OACRlB,MAAO,OACP3N,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnC,OAAQ,OAEVoC,SAAUtF,EAAc0F,GAAG,KAAQjO,KAAgBN,GACnDsO,QAAS9K,IAbX,gBAgBE,kBAACmE,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,OAGrC,yBACE8D,MAAO,CACLM,UAAW,SACXa,OAAQ,OACRlB,MAAO,QACP3N,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnC,OAAQ,OAEVuC,QAAS7L,EACT0L,SAAUpF,EAASwF,GAAG,KAAOvO,IAd/B,kCAiBE,kBAAC2H,EAAA,EAAD,CAAaC,OAAO,SAASC,KAAM,UAM7C,kBAACQ,GAAD,KACE,yBACEsD,MAAO,CAAEE,QAAS,OAAQ2C,aAAc,SAAU1C,eAAgB,gBAAiB2C,WAAY,WAE/F,6BACE,uBAAG9C,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,MAAOG,QAAS,QAAtD,aAEE,6BACA,yBAAKP,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,QAAxC,8DAGA,+BAOJ,yBACEJ,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnC,OAAQ,OAEVuC,QAAS7L,EACT0L,SAAUpF,EAASwF,GAAG,KAAOvO,IAZ/B,kBAeE,kBAAC2H,EAAA,EAAD,CAAaC,OAAO,SAASC,KAAM,OAIvC,yBAAK8D,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7C,yBAAKH,MAAO,CAAEQ,SAAU,OAAQN,QAAS,OAAQ2C,aAAc,SAAUC,WAAY,WACnF,kBAAC9G,EAAA,EAAD,CAAaC,OAAO,cAAcC,KAAM,KACxC,0BAAM8D,MAAO,CAAEO,QAAS,QAAxB,aAFF,SAGE,0BACEP,MAAO,CACLQ,SAAU,OACVuC,WAAY,yBACZxC,QAAS,MACTgC,aAAc,MACdpB,OAAQ,SANZ,gBAYF,yBAAKnB,MAAO,CAAEQ,SAAU,OAAQN,QAAS,OAAQ2C,aAAc,SAAUC,WAAY,WAArF,OAEE,kBAAC,IAAD,CAAS9C,MAAO,CAAEQ,SAAU,QAAUK,IAAG,OAAEzC,QAAF,IAAEA,OAAF,EAAEA,EAAqBpB,IAAK8D,UAAU,IAAIC,OAAO,QAG9F,6BAEA,yBAAKf,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7C,yBAAKH,MAAO,CAAEE,QAAS,SACrB,yBAAKF,MAAO,CAAEI,OAAQ,QACpB,4BACA,4CACA,kBAACM,EAAA,EAAD,YAAatC,QAAb,IAAaA,OAAb,EAAaA,EAAqB4E,SAAlC,KACA,6BAEF,yBAAKhD,MAAO,CAAEI,OAAQ,QACpB,yCACA,2BAAIvB,YAAkB3B,IACtB,sCAAO2B,YAAkBzB,KAE3B,yBAAK4C,MAAO,CAAEI,OAAQ,QACpB,sCACA,gCAAMvB,YAAkB3B,IACxB,sCAAO0B,MAGX,yBAAKoB,MAAO,CAAEE,QAAS,OAAQ4C,WAAY,aAGzC,yBACE9C,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnC,OAAQ,OAEVoC,SAAU9C,KAA4B+C,KAAcC,aACpDC,QAAShD,IAZX,iBAeE,kBAAC3D,EAAA,EAAD,CAAaC,OAAO,KAAKC,KAAM,MAKjC,yBACE8D,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnC,OAAQ,OAEVoC,SAAUtF,EAAc0F,GAAG,KAAQjO,KAAgBN,GACnDsO,QAAS9K,IAZX,kBAeE,kBAACmE,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,MAInC,yBACE8D,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnC,OAAQ,OAEVuC,QAAS7L,EACT0L,SAAUpF,EAASwF,GAAG,KAAOvO,IAZ/B,sBAeE,kBAAC2H,EAAA,EAAD,CAAaC,OAAO,SAASC,KAAM,QAIzC,wBAAI8D,MAAO,CAAEsC,OAAQ,oCAGrB,yBAAKtC,MAAO,CAAEE,QAAS,OAAQC,eAAgB,gBAAiBwB,UAAW,SACzE,yBAAK3B,MAAO,CAAEQ,SAAU,OAAQN,QAAS,OAAQ2C,aAAc,SAAUC,WAAY,WACnF,kBAAC9G,EAAA,EAAD,CAAaC,OAAO,gBAAgBC,KAAM,KAC1C,0BAAM8D,MAAO,CAAEO,QAAS,QAAxB,cAFF,SAIE,0BACEP,MAAO,CACLQ,SAAU,OACVuC,WAAY,yBACZxC,QAAS,MACTgC,aAAc,MACdpB,OAAQ,SANZ,gBAYF,yBAAKnB,MAAO,CAAEQ,SAAU,OAAQN,QAAS,OAAQ2C,aAAc,SAAUC,WAAY,WAArF,QACO,kBAAC,IAAD,CAAS9C,MAAO,CAAEQ,SAAU,QAAUK,IAAG,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAmBvB,IAAK8D,UAAU,IAAIC,OAAO,QAGjG,6BAEA,yBAAKf,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7C,yBAAKH,MAAO,CAAEE,QAAS,SACrB,yBAAKF,MAAO,CAAEI,OAAQ,SACpB,4BACA,4CACA,kBAACM,EAAA,EAAD,YAAanC,QAAb,IAAaA,OAAb,EAAaA,EAAmByE,SAAhC,MAEF,yBAAKhD,MAAO,CAAEI,OAAQ,SACpB,yCACA,2BAAIvB,YAAkB3B,IACtB,sCAAO2B,YAAkBzB,KAE3B,yBAAK4C,MAAO,CAAEI,OAAQ,SACpB,sCACA,gCAAMvB,YAAkB3B,IACxB,sCAAO0B,MAIX,yBAAKoB,MAAO,CAAEE,QAAS,OAAQ4C,WAAY,aAGzC,yBACE9C,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,OACdnB,aAAc,OAEhBoB,SAAUjD,KAAwBkD,KAAcC,aAChDC,QAASnD,IAZX,iBAeE,kBAACxD,EAAA,EAAD,CAAaC,OAAO,KAAKC,KAAM,MAIjC,yBACE8D,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTH,OAAQ,MACRmC,aAAc,QAEhBC,SAAUtF,EAAc0F,GAAG,KAAQjO,KAAgBN,GACnDsO,QAAS9K,IAZX,kBAeE,kBAACmE,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,MAInC,yBACE8D,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTH,OAAQ,MACRmC,aAAc,QAEhBI,QAAS7L,EACT0L,SAAUpF,EAASwF,GAAG,KAAOvO,IAZ/B,qBAeE,kBAAC2H,EAAA,EAAD,CAAaC,OAAO,SAASC,KAAM,SAM3C,kBAACQ,GAAD,KACE,yBAAKsD,MAAO,CAAEE,QAAS,OAAQ4C,WAAY,WACzC,kBAAC9G,EAAA,EAAD,CAAaC,OAAO,QAAQC,KAAM,KAClC,6BACE,uBAAG8D,MAAO,CAAEQ,SAAU,OAAQJ,OAAQ,MAAOK,WAAY,QAAzD,UACA,uBAAGT,MAAO,CAAEI,OAAQ,QAApB,sFAKJ,yBAAKJ,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7C,yBAAKH,MAAO,CAAEI,OAAQ,QAASH,MAAO,QACpC,uBAAGD,MAAO,CAAES,WAAY,YAAxB,0BACA,uBAAGT,MAAO,CAAEQ,SAAU,OAAQC,WAAY,QAAUxF,OAAOkC,EAAgB,MAA3E,UAEF,yBAAK6C,MAAO,CAAEI,OAAQ,QAASE,UAAW,SAAUL,MAAO,QACzD,uBAAGD,MAAO,CAAES,WAAY,YAAxB,wBACA,uBAAGT,MAAO,CAAEQ,SAAU,OAAQC,WAAY,QACxC,kBAACzE,EAAA,EAAD,CAAaC,OAAO,QAAQC,KAAM,KADpC,QAKF,yBAAK8D,MAAO,CAAEC,MAAO,QACnB,yBAAKD,MAAO,CAAEE,QAAS,OAAQC,eAAgB,kBAC7C,yBAAKH,MAAO,CAAEE,QAAS,OAAQG,cAAe,SAAUD,OAAQ,UAC9D,gDACA,kDAEF,yBACEJ,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,QAEhBI,QAAS7D,GACT0D,UAAW1E,GAAYF,GAXzB,kBAcE,kBAAC5B,EAAA,EAAD,CAAaC,OAAO,WAAWC,KAAM,MAEvC,6BACA,yBACE8D,MAAO,CACLmB,OAAQ,OACR7O,MAAO,QACP+P,gBAAiB,cACjBf,OAAQ,UACRgB,OAAQ,kBACR/B,QAAS,mBACTgC,aAAc,QAEhBI,QAAS/C,GACT4C,UAAW1E,GAAYL,EAAYmF,GAAG,KAAOhF,GAX/C,gBAcE,kBAAC5B,EAAA,EAAD,CAAaC,OAAO,OAAOC,KAAM,UAM3C,kBAAC+G,EAAA,EAAD,U,iCCvrBR,6BA2BepM,IAtBf,WACE,IAAM0G,EAAiBC,cACjB0F,EAAWC,cAEjB,OAAOpN,uBACL,SAACqN,EAAuClE,GACtCkE,EACGlK,MAAK,SAAC+F,GAAD,OAAQ1B,EAAe0B,EAAI,CAACC,eACjChJ,OAAM,SAACC,GACN,IAAIA,EAAIkN,QAAQC,SAAS,eAAzB,CAIA,IAAMD,EAAO,oBAAgBnE,EAAQ,GAAGqE,eAA3B,OAA2CrE,EAAQsE,MAAM,IACtE1R,QAAQC,MAAR,UAAiBsR,EAAjB,aAA6BlN,EAAIkN,SAAWlN,EAAIC,QAChD8M,EAAS,CAACnR,MAAO,CAACsR,UAASjN,MAAOD,EAAIkN,SAAWlN,EAAIC,eAG3D,CAAC8M,EAAU3F","file":"static/js/13.e0d6d27a.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useBondStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchBondPrice() {\n      try {\n        setStat(await bombFinance.getBondStat());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBondPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useBondStats;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Countdown, {CountdownRenderProps} from 'react-countdown';\n\ninterface ProgressCountdownProps {\n  base: Date;\n  deadline: Date;\n  hideBar?: boolean;\n  description: string;\n}\n\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({base, deadline, hideBar, description}) => {\n  const percentage =\n    Date.now() >= deadline.getTime()\n      ? 100\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\n\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\n    const {days, hours, minutes, seconds} = countdownProps;\n    const h = String(days * 24 + hours);\n    const m = String(minutes);\n    const s = String(seconds);\n    return (\n      <StyledCountdown>\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\n      </StyledCountdown>\n    );\n  };\n  return (\n    // <Card>\n    <StyledCardContentInner>\n      {/* <StyledDesc>{description}</StyledDesc> */}\n      <Countdown key={new Date().getTime()} date={deadline} renderer={countdownRenderer} />\n      {hideBar ? (\n        ''\n      ) : (\n        <StyledProgressOuter>\n          <StyledProgress progress={percentage} />\n        </StyledProgressOuter>\n      )}\n    </StyledCardContentInner>\n    // </Card>\n  );\n};\n\nconst StyledCountdown = styled.p`\n  // font-size: 14px;\n  font-weight: 700;\n  // color: ${(props) => props.theme.color.grey[100]};\n  margin: 0 0 6px 0;\n`;\n\nconst StyledProgressOuter = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[700]};\n`;\n\nconst StyledProgress = styled.div<{progress: number}>`\n  width: ${(props) => props.progress}%;\n  height: 100%;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[100]};\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  // padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ProgressCountdown;\n","import {useEffect, useState} from 'react';\nimport useRefresh from '../useRefresh';\nimport useBombFinance from '../useBombFinance';\n\nconst useClaimRewardCheck = () => {\n  const {slowRefresh} = useRefresh();\n  const [canClaimReward, setCanClaimReward] = useState(false);\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function canUserClaimReward() {\n      try {\n        setCanClaimReward(await bombFinance.canUserClaimRewardFromBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n      canUserClaimReward();\n    }\n  }, [isUnlocked, slowRefresh, bombFinance]);\n\n  return canClaimReward;\n};\n\nexport default useClaimRewardCheck;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport useRefresh from '../useRefresh';\n\nconst useWithdrawCheck = () => {\n  const [canWithdraw, setCanWithdraw] = useState(false);\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function canUserWithdraw() {\n      try {\n        setCanWithdraw(await bombFinance.canUserUnstakeFromBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n      canUserWithdraw();\n    }\n  }, [isUnlocked, bombFinance, slowRefresh]);\n\n  return canWithdraw;\n};\n\nexport default useWithdrawCheck;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnBoardroom = () => {\n  const {slowRefresh} = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getStakedSharesOnBoardroom());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, bombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnBoardroom;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalValueLocked = () => {\n  const [totalValueLocked, setTotalValueLocked] = useState<Number>(0);\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchTVL() {\n      try {\n        setTotalValueLocked(await bombFinance.getTotalValueLocked());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTVL();\n  }, [setTotalValueLocked, bombFinance, slowRefresh]);\n\n  return totalValueLocked;\n};\n\nexport default useTotalValueLocked;\n","import {useCallback, useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport {ContractName} from '../bomb-finance';\nimport config from '../config';\n\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await bombFinance.earnedFromBank(poolName, earnTokenName, poolId, bombFinance.myAccount);\n    setBalance(balance);\n  }, [poolName, earnTokenName, poolId, bombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshBalance);\n    }\n  }, [isUnlocked, poolName, bombFinance, fetchBalance]);\n\n  return balance;\n};\n\nexport default useEarnings;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport {Bank} from '../bomb-finance';\n\nconst useHarvest = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleReward = useCallback(() => {\n    handleTransactionReceipt(\n      bombFinance.harvest(bank.contract, bank.poolId),\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\n    );\n  }, [bank, bombFinance, handleTransactionReceipt]);\n\n  return {onReward: handleReward};\n};\n\nexport default useHarvest;\n","import {useContext} from 'react';\nimport {Context as BanksContext} from '../contexts/Banks';\nimport {Bank, ContractName} from '../bomb-finance';\n\nconst useBank = (contractName: ContractName): Bank => {\n  const {banks} = useContext(BanksContext);\n  return banks.find((bank) => bank.contract === contractName);\n};\n\nexport default useBank;\n","import {useCallback, useState, useEffect} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport {PoolStats} from '../bomb-finance/types';\nimport config from '../config';\n\nconst useStatsForPool = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\n\n  const fetchAPRsForPool = useCallback(async () => {\n    setPoolAPRs(await bombFinance.getPoolAPRs(bank));\n  }, [bombFinance, bank]);\n  useEffect(() => {\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPoolAPRs, bombFinance, fetchAPRsForPool]);\n\n  return poolAPRs;\n};\n\nexport default useStatsForPool;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useRedeemOnBoardroom = (description?: string) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleRedeem = useCallback(() => {\n    const alertDesc = description || 'Redeem BSHARE from Boardroom';\n    handleTransactionReceipt(bombFinance.exitFromBoardroom(), alertDesc);\n  }, [bombFinance, description, handleTransactionReceipt]);\n  return {onRedeem: handleRedeem};\n};\n\nexport default useRedeemOnBoardroom;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {BigNumber} from 'ethers';\nimport useRefresh from './useRefresh';\n\nconst  useCurrentEpoch = () => {\n  const [currentEpoch, setCurrentEpoch] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchCurrentEpoch() {\n      try {\n        setCurrentEpoch(await bombFinance.getCurrentEpoch());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchCurrentEpoch();\n  }, [setCurrentEpoch, bombFinance, slowRefresh]);\n\n  return currentEpoch;\n};\n\nexport default useCurrentEpoch;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useFetchBoardroomAPR = () => {\n  const [apr, setApr] = useState<number>(0);\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchBoardroomAPR() {\n      try {\n        setApr(await bombFinance.getBoardroomAPR());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBoardroomAPR();\n  }, [setApr, bombFinance, slowRefresh]);\n\n  return apr;\n};\n\nexport default useFetchBoardroomAPR;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useCashPriceInEstimatedTWAP = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchCashPrice() {\n      try {\n        setStat(await bombFinance.getBombStatInEstimatedTWAP());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchCashPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useCashPriceInEstimatedTWAP;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {AllocationTime} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useTreasuryAllocationTimes = () => {\n  const {slowRefresh} = useRefresh();\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getTreasuryNextAllocationTime().then(setTime);\n    }\n  }, [bombFinance, slowRefresh]);\n  return time;\n};\n\nexport default useTreasuryAllocationTimes;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnBoardroom = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await bombFinance.getTotalStakedInBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTotalStaked();\n  }, [isUnlocked, slowRefresh, bombFinance]);\n\n  return totalStaked;\n};\n\nexport default useTotalStakedOnBoardroom;\n","import {useCallback, useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport {BigNumber} from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\n  }, [bombFinance]);\n\n  useEffect(() => {\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, bombFinance, fetchCashPrice]);\n\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;\n","import {BigNumber} from 'ethers';\n\nexport const DECIMALS_18 = BigNumber.from(10).pow(14);\n\nexport const BOND_REDEEM_PRICE = 1.01;\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\n","\r\n\r\n\r\n\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport * as React from 'react';\r\nimport { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport '../Dashboard.css';\r\n// import usebShareStats from '../../../hooks/usebShareStats';\r\n\r\nimport { roundAndFormatNumber } from '../../../0x';\r\n// import TokenSymbol from '../../../components/TokenSymbol';\r\nimport useBombStats from '../../../hooks/useBombStats';\r\nimport usebShareStats from '../../../hooks/usebShareStats'\r\n\r\nimport useBondStats from '../../../hooks/useBondStats';\r\n\r\nconst Table = styled.table`\r\n  color: white;\r\n  padding: 10px;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  color: white;\r\n  padding: 10px;\r\n  border-style: solid;\r\n  border-color: white;\r\n  border-width: 0 0 1px 0;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  text-align: center;\r\n  color: white;\r\n  padding: 10px;\r\n  border-style: solid;\r\n  border-color: white;\r\n  border-width: 0 0 1px 0;\r\n`;\r\nconst Tr = styled.tr`\r\n  color: white;\r\n  padding: 10px;\r\n  border-style: solid;\r\n  border-color: white;\r\n  border-width: 0 0 1px 0;\r\n`;\r\n// const Item = style(Paper)(({ theme }) => ({\r\n//   backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n//   ...theme.typography.body2,\r\n//   padding: theme.spacing(1),\r\n//   textAlign: 'center',\r\n//   color: theme.palette.text.secondary,\r\n// }));\r\n// const bShareStats = usebShareStats();\r\n// const bShareTotalSupply = useMemo(() => (bShareStats ? String(bShareStats.totalSupply) : null), [bShareStats]);\r\n\r\nexport default function BasicTable() {\r\n  const bombStats = useBombStats();\r\n  const bShareStats = usebShareStats();\r\n  const tBondStats = useBondStats();\r\n  const bombPriceInDollars = useMemo(\r\n      () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\r\n      [bombStats],\r\n  );\r\n  const bShareTotalSupply = useMemo(() => (bShareStats ? String(bShareStats.totalSupply) : null), [bShareStats]);\r\n  const bShareCirculatingSupply = useMemo(\r\n      () => (bShareStats ? String(bShareStats.circulatingSupply) : null),\r\n      [bShareStats],\r\n  );\r\n  const bombCirculatingSupply = useMemo(() => (bombStats ? String(bombStats.circulatingSupply) : null), [bombStats]);\r\n  const bombTotalSupply = useMemo(() => (bombStats ? String(bombStats.totalSupply) : null), [bombStats]);\r\n  const bombPriceInBNB = useMemo(() => (bombStats ? Number(bombStats.tokenInFtm).toFixed(4) : null), [bombStats]);\r\n\r\n\r\n  const tBondPriceInDollars = useMemo(\r\n      () => (tBondStats ? Number(tBondStats.priceInDollars).toFixed(2) : null),\r\n      [tBondStats],\r\n  );\r\n  const tBondPriceInBNB = useMemo(() => (tBondStats ? Number(tBondStats.tokenInFtm).toFixed(4) : null), [tBondStats]);\r\n  const tBondCirculatingSupply = useMemo(\r\n      () => (tBondStats ? String(tBondStats.circulatingSupply) : null),\r\n      [tBondStats],\r\n  );\r\n  const tBondTotalSupply = useMemo(() => (tBondStats ? String(tBondStats.totalSupply) : null), [tBondStats]);\r\n\r\n\r\n  return (\r\n    <div>\r\n    <Table>\r\n      <Tr>\r\n        <th></th>\r\n        <Th></Th>\r\n        <Th>Current Supply</Th>\r\n        <Th>Total Supply</Th>\r\n        <Th>Price</Th>\r\n      </Tr>\r\n      <Tr>\r\n        <td><TokenSymbol symbol=\"BOMB\" size={28} /></td>\r\n        <Td>$BOMB</Td>\r\n        <Td>{roundAndFormatNumber(bombCirculatingSupply, 2)}</Td>\r\n        <Td>{roundAndFormatNumber(bombTotalSupply, 2)}</Td>\r\n        <Td> ${bombPriceInBNB ? bombPriceInBNB : '-.----'} BTC<br></br>${bombPriceInDollars ? roundAndFormatNumber(bombPriceInDollars, 2) : '-.--'} / BOMB</Td>\r\n        <td><TokenSymbol symbol=\"META\" size={28} /></td>\r\n      </Tr>\r\n      <Tr>\r\n        <td><TokenSymbol symbol=\"BSHARE\" size={28} /></td>\r\n        <Td>$BSHARE</Td>\r\n        <Td>{roundAndFormatNumber(bShareCirculatingSupply, 2)}</Td>\r\n                    <Td>{roundAndFormatNumber(bShareTotalSupply, 2)}</Td>\r\n                    <Td>\r\n                        ${bombPriceInBNB ? bombPriceInBNB : '-.----'} BTC<br></br>  ${bombPriceInDollars ? roundAndFormatNumber(bombPriceInDollars, 2) : '-.--'} / BOMB\r\n                    </Td>\r\n        <td><TokenSymbol symbol=\"META\" size={28} /></td>\r\n      </Tr>\r\n      <Tr>\r\n        <td><TokenSymbol symbol=\"BBOND\" size={28} /></td>\r\n        <Td>$BBOND</Td>\r\n        <Td>{roundAndFormatNumber(tBondCirculatingSupply, 2)} </Td>\r\n                    <Td>{roundAndFormatNumber(tBondTotalSupply, 2)}</Td>\r\n                    <Td>\r\n                        {tBondPriceInBNB ? tBondPriceInBNB : '-.----'} BTC<br></br> ${tBondPriceInDollars ? tBondPriceInDollars : '-.--'} / BBOND\r\n                    </Td>\r\n        <td><TokenSymbol symbol=\"META\" size={28}  /></td>\r\n\r\n      </Tr>\r\n    </Table>\r\n  </div>\r\n  );\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport useBombFinance from './useBombFinance';\r\nimport {BigNumber} from 'ethers';\r\nimport useRefresh from './useRefresh';\r\n\r\nconst  useLastEpoch = () => {\r\n  const [lastEpoch, setLastEpoch] = useState<BigNumber>(BigNumber.from(0));\r\n  const bombFinance = useBombFinance();\r\n  const {slowRefresh} = useRefresh();\r\n\r\n  useEffect(() => {\r\n    async function fetchlastEpoch() {\r\n      try {\r\n        setLastEpoch(await bombFinance.getLastEpoch());\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    fetchlastEpoch();\r\n  }, [setLastEpoch, bombFinance, slowRefresh]);\r\n\r\n  return lastEpoch;\r\n};\r\n\r\nexport default useLastEpoch;\r\n","import React, { useMemo, useEffect, useCallback } from 'react';\r\nimport moment from 'moment';\r\n// import useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTP';\r\nimport Table from './Components/Table';\r\nimport styled from 'styled-components';\r\nimport Footer from '../../components/Footer';\r\nimport Nav from '../../components/Nav';\r\nimport TokenSymbol from '../../components/TokenSymbol';\r\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\r\nimport ProgressCountdown from '../Boardroom/components/ProgressCountdown';\r\nimport useCurrentEpoch from '../../hooks/useCurrentEpoch';\r\nimport uselastEpoch from '../../hooks/useLastEpoch';\r\nimport useCashPriceInEstimatedTWAP from '../../hooks/useCashPriceInEstimatedTWAP';\r\nimport useTotalStakedOnBoardroom from '../../hooks/useTotalStakedOnBoardroom';\r\nimport useStatsForPool from '../../hooks/useStatsForPool';\r\n\r\n// import { Token } from 'graphql';\r\nimport CountUp from 'react-countup';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { getDisplayBalance } from '../../utils/formatBalance';\r\nimport useTotalValueLocked from '../../hooks/useTotalValueLocked';\r\nimport useFetchBoardroomAPR from '../../hooks/useFetchBoardroomAPR';\r\nimport useClaimRewardCheck from '../../hooks/boardroom/useClaimRewardCheck';\r\nimport useWithdrawCheck from '../../hooks/boardroom/useWithdrawCheck';\r\nimport useRedeemOnBoardroom from '../../hooks/useRedeemOnBoardroom';\r\nimport useBank from '../../hooks/useBank';\r\n\r\nimport useTreasuryAllocationTimes from '../../hooks/useTreasuryAllocationTimes';\r\nimport useEarnings from '../../hooks/useEarnings';\r\nimport useHarvest from '../../hooks/useHarvest';\r\nimport useBombStats from '../../hooks/useBombStats';\r\nimport useBombFinance from '../../hooks/useBombFinance';\r\nimport useShareStats from '../../hooks/usebShareStats';\r\nimport useStakedBalanceOnBoardroom from '../../hooks/useStakedBalanceOnBoardroom';\r\nimport Bank from '../../bomb-finance';\r\nimport useTokenBalance from '../../hooks/useTokenBalance';\r\nimport useBondStats from '../../hooks/useBondStats';\r\nimport { useTransactionAdder } from '../../state/transactions/hooks';\r\nimport { BOND_REDEEM_PRICE_BN } from '../../bomb-finance/constants';\r\nimport useApprove, { ApprovalState } from '../../hooks/useApprove';\r\n// import\r\n\r\n// const cashPrice = useCashPriceInLastTWAP();\r\n// console.log(cashPrice);\r\n\r\n// const Data = ({Bank}) => {\r\n//   const earnings = useEarnings(Bank.contract, Bank.earnTokenName, Bank.poolId);\r\n//   const {onReward} = useHarvest(Bank);\r\n//   const bombStats = useBombStats();\r\n//   const tShareStats = useShareStats();\r\n\r\n//   const tokenName = Bank.earnTokenName === 'BSHARE' ? 'BSHARE' : 'BOMB';\r\n//   const tokenStats = Bank.earnTokenName === 'BSHARE' ? tShareStats : bombStats;\r\n//   const tokenPriceInDollars = useMemo(\r\n//     () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n//     [tokenStats],\r\n//   );\r\n//   const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n// };\r\n// const history = useHistory();\r\nconst Container = styled.div`\r\n  background-image: url('./background.jpg');\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n`;\r\nconst Card = styled.div`\r\n  color: white !important;\r\n  width: 80%;\r\n  margin: auto;\r\n  margin-bottom: 1rem;\r\n  backdrop-filter: blur(6px);\r\n  border-radius: 25px;\r\n  border: 2px solid rgba(114, 140, 223, 1);\r\n  padding: 1rem;\r\n  background-color: rgba(35, 40, 75, 0.75);\r\n`;\r\nconst Title = styled.h2`\r\n  margin: 1rem 0 0 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst Dashboard = () => {\r\n  useEffect(() => window.scrollTo(0, 0));\r\n  const TVL = useTotalValueLocked();\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n  const stakedBalance = useStakedBalanceOnBoardroom();\r\n  const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);\r\n  const earnings = useEarnings(Bank.contract, Bank.earnTokenName, Bank.poolId);\r\n  const cashStat = useCashPriceInEstimatedTWAP();\r\n  const addTransaction = useTransactionAdder();\r\n  const bombFinance = useBombFinance();\r\n  const bondBalance = useTokenBalance(bombFinance?.BBOND);\r\n  const { onReward } = useHarvest(Bank);\r\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\r\n  const bondStat = useBondStats();\r\n  const bombStats = useBombStats();\r\n  const tShareStats = useShareStats();\r\n  const currentEpoch = useCurrentEpoch();\r\n  const lastEpoch = uselastEpoch();\r\n\r\n  const bShareBank = useBank('BshareBnbLPBShareRewardPool');\r\n  const bombBTCBBank = useBank('BombBtcbLPBShareRewardPool');\r\n\r\n  const statsOnPoolBombBTCB = useStatsForPool(bombBTCBBank.address);\r\n  console.log(statsOnPoolBombBTCB);\r\n  const statsOnPoolBShare = useStatsForPool(bShareBank);\r\n\r\n  const boardroomAPR = useFetchBoardroomAPR();\r\n  const totalStaked = useTotalStakedOnBoardroom();\r\n\r\n  const { onRedeem } = useRedeemOnBoardroom();\r\n  const canWithdraw = useWithdrawCheck();\r\n\r\n  const liveEpochValue = useMemo(() => (cashStat ? Number(cashStat.priceInDollars).toFixed(4) : null), [cashStat]);\r\n\r\n  const tokenStats = Bank.earnTokenName === 'BSHARE' ? tShareStats : bombStats;\r\n  const tokenPriceInDollars = useMemo(\r\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\r\n    [tokenStats],\r\n  );\r\n  const canClaimReward = useClaimRewardCheck();\r\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n  const { to } = useTreasuryAllocationTimes();\r\n\r\n  const handleBuyBonds = useCallback(\r\n    async (amount) => {\r\n      try {\r\n        const tx = await bombFinance?.buyBonds(amount);\r\n        addTransaction(tx, {\r\n          summary: `Buy ${Number(amount).toFixed(2)} BBOND with ${amount} BOMB`,\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    },\r\n    [bombFinance, addTransaction],\r\n  );\r\n  const [approveBSHAREStatus, approveBSHARE] = useApprove(bombFinance.BSHARE, bombFinance.contracts.Boardroom.address);\r\n  const [approveBBOMB_BTCBStatus, approveBBOMB_BTCB] = useApprove(\r\n    bombFinance.BBOMBBTCB,\r\n    bombFinance.contracts.Boardroom.address,\r\n  );\r\n\r\n  const handleRedeemBonds = useCallback(\r\n    async (amount) => {\r\n      try {\r\n        const tx = await bombFinance?.redeemBonds(amount);\r\n        addTransaction(tx, { summary: `Redeem ${amount} BBOND` });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    },\r\n    [bombFinance, addTransaction],\r\n  );\r\n  // console.log(statsOnPoolBombBTCB.TVL);\r\n  // console.log(statsOnPoolBombBTCB.dailyAPR);\r\n  // console.log(statsOnPoolBombBTCB.yearlyAPR);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Nav />\r\n        <Card variant=\"outlined\">\r\n          <Title>Bomb Finance Summary</Title>\r\n          <hr />\r\n\r\n          <div style={{ width: '100%', display: 'flex', justifyContent: 'space-between', margin: 'auto' }}>\r\n            <div style={{ width: '40%' }}>\r\n              <Table />\r\n            </div>\r\n            <div\r\n              style={{ width: '20%', flexDirection: 'column', textAlign: 'center', color: 'white', padding: '10px' }}\r\n            >\r\n              <p style={{ fontSize: '16px', margin: '0', fontWeight: '100' }}>Current Epoch</p>\r\n              <Typography>{Number(currentEpoch)}</Typography>\r\n              <p style={{ fontSize: '32px', margin: '0' }}></p>\r\n              <hr />\r\n              <p style={{ fontSize: '32px', margin: '0' }}>\r\n                {' '}\r\n                <ProgressCountdown base={moment().toDate()} hideBar={true} deadline={to} description=\"Next Epoch\" />\r\n              </p>\r\n              <p style={{ fontSize: '16px', margin: '0', fontWeight: '100' }}>Next Epoch in</p>\r\n              <hr />\r\n              <p style={{ fontSize: '16px', margin: '0', fontWeight: '100', padding: '2px' }}>\r\n                Live TWAP: {liveEpochValue}\r\n              </p>\r\n              <p style={{ fontSize: '16px', margin: '0', fontWeight: '100', padding: '2px' }}>\r\n                TVL: <CountUp style={{ fontSize: '25px' }} end={TVL} separator=\",\" prefix=\"$\" />\r\n              </p>\r\n              <p style={{ fontSize: '16px', margin: '0', fontWeight: '100', padding: '2px' }}>\r\n                Last Epoch TWAP: <Typography>{(Number(lastEpoch) / 100000000000000).toFixed(5)}</Typography>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card style={{ float: 'right', width: '20%', marginRight: '9rem', marginLeft: '2px', height: '23rem' }}>\r\n          <h2>Latest News</h2>\r\n        </Card>\r\n\r\n        <span style={{ marginLeft: '9rem', marginBottom: '1rem' }}>\r\n          <div style={{ color: 'white', width: '100%', textAlign: 'right', marginBottom: '5px' }}>\r\n            <a style={{ color: 'rgba(158, 230, 255, 1)', padding: '10px' }} href=\"https://docs.bomb.money/\">\r\n              Read Investment Strategy\r\n            </a>\r\n          </div>\r\n          <div\r\n            style={{\r\n              cursor: 'pointer',\r\n              color: 'white',\r\n              fontFamily : 'bold',\r\n              fontSize: '1.7rem',\r\n              marginLeft: '9rem',\r\n              paddingTop: '1rem',\r\n              paddingBottom: '1rem',\r\n              textAlign: 'center',\r\n              width: '58%',\r\n              backgroundImage: 'linear-gradient(rgba(0, 245, 171, 0.5),rgba(0, 173, 232, 0.5))',\r\n            }}\r\n          >\r\n            <a>Invest Now</a>\r\n          </div>\r\n        </span>\r\n        <div\r\n          style={{\r\n            width: '58%',\r\n            marginTop: '12px',\r\n            display: 'flex',\r\n            marginLeft: '9rem',\r\n            justifyContent: 'space-between',\r\n            textAlign: 'text',\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              cursor: 'pointer',\r\n              fontSize: '1.5rem',\r\n              textAlign: 'center',\r\n              padding: '16px 40px',\r\n              cursor: 'pointer',\r\n              width: '40%',\r\n              color: 'black',\r\n              backgroundImage: 'linear-gradient(rgba(114, 140, 223, 1),rgba(255, 255, 255, 0.5))',\r\n            }}\r\n          >\r\n              <TokenSymbol symbol=\"DISCORD\" size={30} />\r\n\r\n            <a style={{ color: 'white', textDecoration: 'none', textAlign:'center' }} href=\"https://discord.bomb.money\">\r\n              {' '}\r\n              Chat On Discord\r\n            </a>\r\n          </div>\r\n          <div\r\n            style={{\r\n              cursor: 'pointer',\r\n              fontSize: '1.5rem',\r\n              textAlign: 'center',\r\n              padding: '16px 40px',\r\n              width: '40%',\r\n              color: 'black',\r\n              backgroundImage: 'linear-gradient(rgba(114, 140, 223, 1),rgba(255, 255, 255, 0.5))',\r\n            }}\r\n          >\r\n\r\n            <TokenSymbol symbol='DOCS' size={30}/>\r\n\r\n            <a style={{ color: 'white', textDecoration: 'none',textAlign:'center' }} href=\"https://discord.bomb.money\">\r\n              Read Docs\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <Card variant=\"outlined\" style={{ width: '56%', marginLeft: '9rem ', marginTop: '1rem' }}>\r\n          <div className=\"header\">\r\n            <div style={{ flex: 'row', fontSize: '25px' }}>\r\n              {' '}\r\n              <TokenSymbol symbol=\"BSHARE\" size={50} />\r\n              Boardroom\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <p>Stake BSHARE and earn BOMB every epoch</p>\r\n              <div style={{ fontSize: '25px', marginTop: '1.1rem' }}>\r\n                TVL: <CountUp end={TVL} separator=\",\" prefix=\"$\" />\r\n              </div>\r\n            </div>\r\n            <hr style={{ color: 'white' }} />\r\n            <div style={{ textAlign: 'right', margin: '16px' }}>\r\n              Total Staked:\r\n              <TokenSymbol symbol=\"BSHARE\" size={15} />\r\n              {getDisplayBalance(totalStaked)}\r\n            </div>\r\n\r\n            <Grid container rowSpacing={1}>\r\n              <Grid item xs={2}>\r\n                <span style={{ fontSize: '20px' }}>\r\n                  Daily Returns\r\n                  <br />\r\n                  <Typography>{(boardroomAPR / 365).toFixed(2)}%</Typography>\r\n                  <br />\r\n                </span>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <span style={{ fontSize: '20px' }}>\r\n                  Your Stake: <br />\r\n                  {getDisplayBalance(stakedBalance)} {/*To get number of stakes divide by the value of each stake */}\r\n                  <br />≈ ${getDisplayBalance(stakedBalance)}\r\n                </span>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <span style={{ fontSize: '20px' }}>\r\n                  Earned:\r\n                  <br />\r\n                  {getDisplayBalance(earnings)}\r\n                  <br />\r\n                  ≈${earnedInDollars}\r\n                </span>\r\n              </Grid>\r\n\r\n              <div style={{ diplay: 'flex', justifyContent: 'center' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                  <div\r\n                    style={{\r\n                      height: '20px',\r\n                      width: '6rem',\r\n                      color: 'white',\r\n                      backgroundColor: 'transparent',\r\n                      cursor: 'pointer',\r\n                      border: '1px solid white',\r\n                      padding: '5px 8px 5px 12px',\r\n                      borderRadius: '20px',\r\n                      margin: '5px',\r\n                      flex: 'row',\r\n                    }}\r\n                    disabled={approveBSHAREStatus !== ApprovalState.NOT_APPROVED}\r\n                    onClick={approveBSHARE}\r\n                  >\r\n                    Deposit &emsp;\r\n                    <TokenSymbol symbol=\"UP\" size={16} />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      height: '20px',\r\n                      width: '6rem',\r\n                      color: 'white',\r\n                      backgroundColor: 'transparent',\r\n                      cursor: 'pointer',\r\n                      border: '1px solid white',\r\n                      padding: '5px 8px 5px 12px',\r\n                      borderRadius: '20px',\r\n                      margin: '5px',\r\n                    }}\r\n                    disabled={stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)}\r\n                    onClick={onRedeem}\r\n                  >\r\n                    Withdraw &nbsp;\r\n                    <TokenSymbol symbol=\"DOWN\" size={16} />\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    textAlign: 'center',\r\n                    height: '20px',\r\n                    width: '14rem',\r\n                    color: 'white',\r\n                    backgroundColor: 'transparent',\r\n                    cursor: 'pointer',\r\n                    border: '1px solid white',\r\n                    padding: '5px 8px 5px 10px',\r\n                    borderRadius: '20px',\r\n                    margin: '5px',\r\n                  }}\r\n                  onClick={onReward}\r\n                  disabled={earnings.eq(0) || !canClaimReward}\r\n                >\r\n                  &emsp;Claim Reward &emsp;&emsp;\r\n                  <TokenSymbol symbol=\"BSHARE\" size={18} />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </Card>\r\n        <Card>\r\n          <div\r\n            style={{ display: 'flex', alignContent: 'center', justifyContent: 'space-between', alignItems: 'center' }}\r\n          >\r\n            <div>\r\n              <p style={{ fontSize: '20px', margin: '1px', padding: '1px' }}>\r\n                Bomb Farms\r\n                <br />\r\n                <div style={{ fontSize: '14px', margin: '4px' }}>\r\n                  Stake your LP tokens in our farms to start earning $BSHARE\r\n                </div>\r\n                <br />\r\n              </p>\r\n            </div>\r\n            {/* <div style={{ border: '2px solid white', borderRadius: '16px', padding: '4px 32px' }}>\r\n              Claim All&emsp;\r\n              <TokenSymbol symbol=\"BSHARE\" size={15} />\r\n            </div> */}\r\n            <div\r\n              style={{\r\n                height: '20px',\r\n                color: 'white',\r\n                backgroundColor: 'transparent',\r\n                cursor: 'pointer',\r\n                border: '1px solid white',\r\n                padding: '5px 8px 5px 10px',\r\n                borderRadius: '20px',\r\n                margin: '5px',\r\n              }}\r\n              onClick={onReward}\r\n              disabled={earnings.eq(0) || !canClaimReward}\r\n            >\r\n              Claim All&emsp;\r\n              <TokenSymbol symbol=\"BSHARE\" size={18} />\r\n            </div>\r\n          </div>\r\n          {/* Bomb btcb */}\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ fontSize: '20px', display: 'flex', alignContent: 'center', alignItems: 'center' }}>\r\n              <TokenSymbol symbol=\"BOMB-BNB-LP\" size={28} />\r\n              <span style={{ padding: '4px' }}>BOMB-BTCB</span>&emsp;\r\n              <span\r\n                style={{\r\n                  fontSize: '10px',\r\n                  background: 'rgba(0, 232, 162, 0.5)',\r\n                  padding: '2px',\r\n                  borderRadius: '5px',\r\n                  height: '12px',\r\n                }}\r\n              >\r\n                Recommended\r\n              </span>\r\n            </div>\r\n            <div style={{ fontSize: '20px', display: 'flex', alignContent: 'center', alignItems: 'center' }}>\r\n              TVL:\r\n              <CountUp style={{ fontSize: '25px' }} end={statsOnPoolBombBTCB?.TVL} separator=\",\" prefix=\"$\" />\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ display: 'flex' }}>\r\n              <div style={{ margin: '8px' }}>\r\n                <p></p>\r\n                <p>Daily return:</p>\r\n                <Typography>{statsOnPoolBombBTCB?.dailyAPR}%</Typography>\r\n                <p></p>\r\n              </div>\r\n              <div style={{ margin: '8px' }}>\r\n                <p>Your Stake</p>\r\n                <p>{getDisplayBalance(stakedBalance)}</p>\r\n                <p>≈ ${getDisplayBalance(earnings)}</p>\r\n              </div>\r\n              <div style={{ margin: '8px' }}>\r\n                <p>Earned:</p>\r\n                <p> ${getDisplayBalance(stakedBalance)}</p>\r\n                <p>≈ ${earnedInDollars}</p>\r\n              </div>\r\n            </div>\r\n            <div style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n              {/* href={buyBombAddress} */}\r\n              {/* <Button1 text=\"Deposit\" symbol=\"UP\" /> */}\r\n              <div\r\n                style={{\r\n                  height: '20px',\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  cursor: 'pointer',\r\n                  border: '1px solid white',\r\n                  padding: '5px 8px 5px 10px',\r\n                  borderRadius: '20px',\r\n                  margin: '5px',\r\n                }}\r\n                disabled={approveBBOMB_BTCBStatus !== ApprovalState.NOT_APPROVED}\r\n                onClick={approveBBOMB_BTCB}\r\n              >\r\n                Deposit &emsp;\r\n                <TokenSymbol symbol=\"UP\" size={16} />\r\n              </div>\r\n              {/* href={buyBombAddress} */}\r\n              {/* <Button1 text=\"Withdraw\" symbol=\"DOWN\" />\r\n               */}\r\n              <div\r\n                style={{\r\n                  height: '20px',\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  cursor: 'pointer',\r\n                  border: '1px solid white',\r\n                  padding: '5px 8px 5px 10px',\r\n                  borderRadius: '20px',\r\n                  margin: '5px',\r\n                }}\r\n                disabled={stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)}\r\n                onClick={onRedeem}\r\n              >\r\n                Withdraw &emsp;\r\n                <TokenSymbol symbol=\"DOWN\" size={15} />\r\n              </div>\r\n              {/* href={buyBombAddress} */}\r\n              {/* <Button1 text=\"Claim Rewards\" symbol=\"BSHARE\" /> */}\r\n              <div\r\n                style={{\r\n                  height: '20px',\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  cursor: 'pointer',\r\n                  border: '1px solid white',\r\n                  padding: '5px 8px 5px 10px',\r\n                  borderRadius: '20px',\r\n                  margin: '5px',\r\n                }}\r\n                onClick={onReward}\r\n                disabled={earnings.eq(0) || !canClaimReward}\r\n              >\r\n                Claim Reward &emsp;\r\n                <TokenSymbol symbol=\"BSHARE\" size={16} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr style={{ border: '1px solid rgba(0, 173, 232, 1)' }} />\r\n\r\n          {/* Bshare -bnb */}\r\n          <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '28px' }}>\r\n            <div style={{ fontSize: '20px', display: 'flex', alignContent: 'center', alignItems: 'center' }}>\r\n              <TokenSymbol symbol=\"BSHARE-BNB-LP\" size={28} />\r\n              <span style={{ padding: '4px' }}>BSHARE-BNB</span>\r\n              &emsp;\r\n              <span\r\n                style={{\r\n                  fontSize: '10px',\r\n                  background: 'rgba(0, 232, 162, 0.5)',\r\n                  padding: '2px',\r\n                  borderRadius: '5px',\r\n                  height: '12px',\r\n                }}\r\n              >\r\n                Recommended\r\n              </span>\r\n            </div>\r\n            <div style={{ fontSize: '20px', display: 'flex', alignContent: 'center', alignItems: 'center' }}>\r\n              TVL: <CountUp style={{ fontSize: '25px' }} end={statsOnPoolBShare?.TVL} separator=\",\" prefix=\"$\" />\r\n            </div>\r\n          </div>\r\n          <hr />\r\n\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ display: 'flex' }}>\r\n              <div style={{ margin: '12px' }}>\r\n                <p></p>\r\n                <p>Daily return:</p>\r\n                <Typography>{statsOnPoolBShare?.dailyAPR}%</Typography>\r\n              </div>\r\n              <div style={{ margin: '12px' }}>\r\n                <p>Your Stake</p>\r\n                <p>{getDisplayBalance(stakedBalance)}</p>\r\n                <p>≈ ${getDisplayBalance(earnings)}</p>\r\n              </div>\r\n              <div style={{ margin: '12px' }}>\r\n                <p>Earned:</p>\r\n                <p> ${getDisplayBalance(stakedBalance)}</p>\r\n                <p>≈ ${earnedInDollars}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n              {/* href={buyBombAddress} */}\r\n              {/* <Button1 text=\"Deposit\" symbol=\"UP\" /> */}\r\n              <div\r\n                style={{\r\n                  height: '20px',\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  cursor: 'pointer',\r\n                  border: '1px solid white',\r\n                  padding: '5px 8px 5px 10px',\r\n                  borderRadius: '20px',\r\n                  marginBottom: '5px',\r\n                }}\r\n                disabled={approveBSHAREStatus !== ApprovalState.NOT_APPROVED}\r\n                onClick={approveBSHARE}\r\n              >\r\n                Deposit &emsp;\r\n                <TokenSymbol symbol=\"UP\" size={16} />\r\n              </div>\r\n              {/* href={buyBombAddress} */}\r\n              {/* <Button1 text=\"Withdraw\" symbol=\"DOWN\" /> */}\r\n              <div\r\n                style={{\r\n                  height: '20px',\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  cursor: 'pointer',\r\n                  border: '1px solid white',\r\n                  padding: '5px 8px 5px 10px',\r\n                  margin: '5px',\r\n                  borderRadius: '20px',\r\n                }}\r\n                disabled={stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)}\r\n                onClick={onRedeem}\r\n              >\r\n                Withdraw &emsp;\r\n                <TokenSymbol symbol=\"DOWN\" size={15} />\r\n              </div>\r\n              {/* href={buyBombAddress} */}\r\n              {/* <Button1 text=\"Claim Rewards\" symbol=\"BSHARE\" /> */}\r\n              <div\r\n                style={{\r\n                  height: '20px',\r\n                  color: 'white',\r\n                  backgroundColor: 'transparent',\r\n                  cursor: 'pointer',\r\n                  border: '1px solid white',\r\n                  padding: '5px 8px 5px 10px',\r\n                  margin: '5px',\r\n                  borderRadius: '20px',\r\n                }}\r\n                onClick={onReward}\r\n                disabled={earnings.eq(0) || !canClaimReward}\r\n              >\r\n                Claim Reward&emsp;\r\n                <TokenSymbol symbol=\"BSHARE\" size={16} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <TokenSymbol symbol=\"BBOND\" size={40} />\r\n            <div>\r\n              <p style={{ fontSize: '20px', margin: '4px', fontWeight: '400' }}>Bonds </p>\r\n              <p style={{ margin: '4px' }}>\r\n                BBOND can be purchased only on contraction periods, when TWAP of BOMB is below 1\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ margin: '0 4px', width: '33%' }}>\r\n              <p style={{ fontWeight: 'lighter' }}>Current Price:(Bomb)^2</p>\r\n              <p style={{ fontSize: '20px', fontWeight: '500' }}>{Number(scalingFactor / 100000000000000)} BTCB</p>\r\n            </div>\r\n            <div style={{ margin: '0 1px', textAlign: 'center', width: '33%' }}>\r\n              <p style={{ fontWeight: 'lighter' }}>Available to redeem:</p>\r\n              <p style={{ fontSize: '30px', fontWeight: '100' }}>\r\n                <TokenSymbol symbol=\"BBOND\" size={36} />\r\n                456\r\n              </p>\r\n            </div>\r\n            <div style={{ width: '33%' }}>\r\n              <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <div style={{ display: 'flex', flexDirection: 'column', margin: '0 8px' }}>\r\n                  <span>Purchase BBond</span>\r\n                  <span>Bom is over peg</span>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    height: '20px',\r\n                    color: 'white',\r\n                    backgroundColor: 'transparent',\r\n                    cursor: 'pointer',\r\n                    border: '1px solid white',\r\n                    padding: '5px 8px 5px 10px',\r\n                    borderRadius: '20px',\r\n                  }}\r\n                  onClick={handleBuyBonds}\r\n                  disabled={!bondStat || isBondRedeemable}\r\n                >\r\n                  Purchase &emsp;\r\n                  <TokenSymbol symbol=\"PURCHASE\" size={16} />\r\n                </div>\r\n                <hr></hr>\r\n                <div\r\n                  style={{\r\n                    height: '20px',\r\n                    color: 'white',\r\n                    backgroundColor: 'transparent',\r\n                    cursor: 'pointer',\r\n                    border: '1px solid white',\r\n                    padding: '5px 8px 5px 10px',\r\n                    borderRadius: '20px',\r\n                  }}\r\n                  onClick={handleRedeemBonds}\r\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\r\n                >\r\n                  Redeem &emsp;\r\n                  <TokenSymbol symbol=\"DOWN\" size={16} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <Footer />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Dashboard;\r\n","import {useCallback} from 'react';\nimport {TransactionResponse} from '@ethersproject/providers';\nimport {useTransactionAdder} from '../state/transactions/hooks';\nimport {useAddPopup} from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<TransactionResponse>, summary: string) => {\n      promise\n        .then((tx) => addTransaction(tx, {summary}))\n        .catch((err) => {\n          if (err.message.includes('User denied')) {\n            // User denied transaction signature on MetaMask.\n            return;\n          }\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n          console.error(`${message}: ${err.message || err.stack}`);\n          addPopup({error: {message, stack: err.message || err.stack}});\n        });\n    },\n    [addPopup, addTransaction],\n  );\n}\n\nexport default useHandleTransactionReceipt;\n"],"sourceRoot":""}