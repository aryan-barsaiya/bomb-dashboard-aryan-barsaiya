{"version":3,"sources":["components/Spacer/Spacer.tsx","hooks/useBondStats.ts","hooks/useCashPriceInLastTWAP.ts","bomb-finance/constants.ts","components/PageHeader/PageHeader.tsx","components/Button/Button.tsx","views/Bond/components/ExchangeModal.tsx","hooks/useCatchError.ts","views/Bond/components/ExchangeCard.tsx","views/Bond/components/ExchangeStat.tsx","hooks/useBondsPurchasable.ts","views/Bond/Bond.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","assets/img/background.jpg","hooks/useEagerConnect.js","components/Page/Page.tsx","components/UnlockWallet/UnlockWallet.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","useBondStats","useState","stat","setStat","slowRefresh","useRefresh","bombFinance","useBombFinance","useEffect","a","getBondStat","console","error","fetchBondPrice","useCashPriceInLastTWAP","BigNumber","from","price","setPrice","fetchCashPrice","useCallback","getBombPriceInLastTWAP","catch","err","stack","refreshInterval","setInterval","config","clearInterval","DECIMALS_18","pow","BOND_REDEEM_PRICE","BOND_REDEEM_PRICE_BN","mul","StyledPageHeader","theme","StyledTitle","h1","StyledSubtitle","h3","color","grey","PageHeader","icon","subtitle","title","StyledButton","button","boxShadow","disabled","fontSize","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonColor","buttonSize","buttonPadding","children","href","onClick","text","to","variant","teal","primary","main","ButtonChild","useMemo","target","ExchangeModal","max","description","onConfirm","onDismiss","action","tokenName","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","value","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","symbol","Label","ModalActions","useCatchError","addPopup","useAddPopup","promise","message","includes","StyledCardTitle","StyledCardIcon","StyledExchanger","StyledExchangeArrow","StyledToken","StyledCardActions","StyledDesc","span","StyledCardContentInner","ExchangeCard","fromToken","fromTokenName","toToken","toTokenName","priceDesc","onExchange","disabledDescription","catchError","Treasury","contracts","useApprove","address","approveStatus","approve","account","useWallet","balance","useTokenBalance","useModal","onPresent","Card","CardContent","TokenSymbol","faArrowRight","ApprovalState","APPROVED","className","PENDING","UNKNOWN","UnlockWallet","ExchangeStat","useBondsPurchasable","setBalance","getBondsPurchasable","fetchBondsPurchasable","BackgroundImage","createGlobalStyle","HomeImage","StyledBond","StyledCardWrapper","StyledStatsWrapper","Bond","path","useRouteMatch","addTransaction","useTransactionAdder","bondStat","cashPrice","bondsPurchasable","bondBalance","BBOND","handleBuyBonds","amount","buyBonds","tx","summary","Number","toFixed","handleRedeemBonds","redeemBonds","isBondRedeemable","gt","isBondPurchasable","tokenInFtm","isBondPayingPremium","bondScale","Page","Helmet","exact","Box","mt","Grid","item","xs","sm","justify","style","margin","display","Alert","severity","BOMB","getDisplayBalance","eq","StyledInputWrapper","borderRadius","StyledInput","input","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","toLocaleString","StyledModalActions","StyledModalAction","l","React","Children","toArray","length","map","child","i","module","exports","useEagerConnect","connect","connector","window","localStorage","getItem","setItem","connectorId","position","minHeight","Nav","Container","maxWidth","paddingBottom","Footer","AccountButton"],"mappings":"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","file":"static/js/18.d9082bdf.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\n  const {spacing} = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useBondStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchBondPrice() {\n      try {\n        setStat(await bombFinance.getBondStat());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBondPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useBondStats;\n","import {useCallback, useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport {BigNumber} from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\n  }, [bombFinance]);\n\n  useEffect(() => {\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, bombFinance, fetchCashPrice]);\n\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;\n","import {BigNumber} from 'ethers';\n\nexport const DECIMALS_18 = BigNumber.from(10).pow(14);\n\nexport const BOND_REDEEM_PRICE = 1.01;\nexport const BOND_REDEEM_PRICE_BN = DECIMALS_18.mul(101).div(100);\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface PageHeaderProps {\n  icon: React.ReactNode;\n  subtitle?: string;\n  title?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\n  return (\n    <StyledPageHeader>\n      {/* <StyledIcon>{icon}</StyledIcon> */}\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </StyledPageHeader>\n  );\n};\n\nconst StyledPageHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\n  padding-top: ${(props) => props.theme.spacing[6]}px;\n  max-width: 512px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst StyledTitle = styled.h1`\n  color: '#f9d749';\n  font-size: 36px;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSubtitle = styled.h3`\n  color: ${(props) => props.theme.color.grey[400]};\n  font-size: 18px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\n\nexport default PageHeader;\n","import React, {useContext, useMemo} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\nimport {Link} from 'react-router-dom';\n\ninterface ButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  href?: string;\n  onClick?: () => void;\n  size?: 'sm' | 'md' | 'lg';\n  text?: string;\n  to?: string;\n  variant?: 'default' | 'secondary' | 'tertiary';\n}\n\nconst Button: React.FC<ButtonProps> = ({children, disabled, href, onClick, size, text, to, variant}) => {\n  const {color, spacing} = useContext(ThemeContext);\n\n  let buttonColor: string;\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.teal[200];\n      break;\n    case 'default':\n    default:\n      buttonColor = color.primary.main;\n  }\n\n  let boxShadow: string;\n  let buttonSize: number;\n  let buttonPadding: number;\n  let fontSize: number;\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3];\n      buttonSize = 36;\n      fontSize = 14;\n      break;\n    case 'lg':\n      buttonPadding = spacing[4];\n      buttonSize = 72;\n      fontSize = 16;\n      break;\n    case 'md':\n    default:\n      buttonPadding = spacing[4];\n      buttonSize = 56;\n      fontSize = 16;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>;\n    } else if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      );\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  boxShadow: string;\n  color: string;\n  disabled?: boolean;\n  fontSize: number;\n  padding: number;\n  size: number;\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[900]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${(props) => props.boxShadow};\n  color: ${(props) => (!props.disabled ? props.color : `${props.color}55`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  &:hover {\n    background-color: ${(props) => props.color};\n    color: ${(props) => props.theme.color.grey[900]};\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default Button;\n","import React, {useCallback, useMemo, useState} from 'react';\nimport Button from '../../../components/Button';\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\nimport Label from '../../../components/Label';\n\ninterface ExchangeModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  title: string;\n  description: string;\n  action: string;\n  tokenName: string;\n}\n\nconst ExchangeModal: React.FC<ExchangeModalProps> = ({\n  max,\n  title,\n  description,\n  onConfirm,\n  onDismiss,\n  action,\n  tokenName,\n}) => {\n  const [val, setVal] = useState('');\n  const fullBalance = useMemo(() => getFullDisplayBalance(max), [max]);\n\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value), [setVal]);\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={title} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <Label text={description} />\n      <ModalActions>\n        <Button text=\"Cancel\" onClick={onDismiss} />\n        <Button text={action} onClick={() => onConfirm(val)} />\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default ExchangeModal;\n","import {useCallback} from 'react';\nimport {useAddPopup} from '../state/application/hooks';\n\nconst DEFAULT_ERROR_MSG = 'Unexpected error is occurred.';\n\nfunction useCatchError(): (promise: Promise<any>, message?: string) => void {\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<any>, message = DEFAULT_ERROR_MSG) => {\n      promise.catch((err) => {\n        if (err.message.includes('User denied')) {\n          // User denied transaction signature on MetaMask.\n          return;\n        }\n        console.error(`Uncaught exception: ${err.stack}`);\n        addPopup({error: {message, stack: err.stack}});\n      });\n    },\n    [addPopup],\n  );\n}\n\nexport default useCatchError;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button, Card} from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport Label from '../../../components/Label';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faArrowRight} from '@fortawesome/free-solid-svg-icons';\nimport useModal from '../../../hooks/useModal';\nimport ExchangeModal from './ExchangeModal';\nimport ERC20 from '../../../bomb-finance/ERC20';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\nimport useCatchError from '../../../hooks/useCatchError';\nimport { useWallet } from \"use-wallet\";\nimport UnlockWallet from '../../../components/UnlockWallet';\n\ninterface ExchangeCardProps {\n  action: string;\n  fromToken: ERC20;\n  fromTokenName: string;\n  toToken: ERC20;\n  toTokenName: string;\n  priceDesc: string;\n  onExchange: (amount: string) => void;\n  disabled?: boolean;\n  disabledDescription?: string;\n}\n\nconst ExchangeCard: React.FC<ExchangeCardProps> = ({\n  action,\n  fromToken,\n  fromTokenName,\n  toToken,\n  toTokenName,\n  priceDesc,\n  onExchange,\n  disabled = false,\n  disabledDescription,\n}) => {\n  const catchError = useCatchError();\n  const {\n    contracts: {Treasury},\n  } = useBombFinance();\n  const [approveStatus, approve] = useApprove(fromToken, Treasury.address);\n\n  const {account} = useWallet();\n  const balance = useTokenBalance(fromToken);\n  const [onPresent, onDismiss] = useModal(\n    <ExchangeModal\n      title={action}\n      description={priceDesc}\n      max={balance}\n      onConfirm={(value) => {\n        onExchange(value);\n        onDismiss();\n      }}\n      action={action}\n      tokenName={fromTokenName}\n    />,\n  );\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardTitle>{`${action} ${toTokenName}`}</StyledCardTitle>\n          <StyledExchanger>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={fromToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={fromTokenName} variant=\"yellow\" />\n            </StyledToken>\n            <StyledExchangeArrow>\n              <FontAwesomeIcon icon={faArrowRight} />\n            </StyledExchangeArrow>\n            <StyledToken>\n              <StyledCardIcon>\n                <TokenSymbol symbol={toToken.symbol} size={54} />\n              </StyledCardIcon>\n              <Label text={toTokenName} variant=\"yellow\" />\n            </StyledToken>\n          </StyledExchanger>\n          <StyledDesc>{priceDesc}</StyledDesc>\n          <StyledCardActions>\n            {!!account ? (\n              <>\n              {approveStatus !== ApprovalState.APPROVED && !disabled ? (\n                <Button\n                  className=\"shinyButton\"\n                  disabled={approveStatus === ApprovalState.PENDING || approveStatus === ApprovalState.UNKNOWN}\n                  onClick={() => catchError(approve(), `Unable to approve ${fromTokenName}`)}\n                >\n                  {`Approve ${fromTokenName}`}\n                </Button>\n              ) : (\n                <Button\n                  className={disabled ? 'shinyButtonDisabled' : 'shinyButton'}\n                  onClick={onPresent}\n                  disabled={disabled}\n                >\n                  {disabledDescription || action}\n                </Button>\n              )}\n              </>\n            ) : (\n              <UnlockWallet />\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  height: 64px;\n  justify-content: center;\n  color: #f9d749;\n  margin-top: ${(props) => -props.theme.spacing[3]}px;\n`;\n\nconst StyledCardIcon = styled.div`\n  background-color: ${(props) => props.theme.color.grey[900]};\n  width: 72px;\n  height: 72px;\n  border-radius: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledExchanger = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spacing[5]}px;\n`;\n\nconst StyledExchangeArrow = styled.div`\n  font-size: 20px;\n  padding-left: ${(props) => props.theme.spacing[3]}px;\n  padding-right: ${(props) => props.theme.spacing[3]}px;\n  padding-bottom: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledToken = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n`;\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n  width: 100%;\n`;\n\nconst StyledDesc = styled.span``;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default ExchangeCard;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Card} from '@material-ui/core';\n\ninterface ExchangeStatProps {\n  tokenName: string;\n  description: string;\n  price: string;\n}\n\nconst ExchangeStat: React.FC<ExchangeStatProps> = ({tokenName, description, price}) => {\n  return (\n    <Card>\n      <StyledCardContentInner>\n        <StyledCardTitle>{`💰 ${tokenName} = ${price} BTC`}</StyledCardTitle>\n        <StyledDesc>{description}</StyledDesc>\n      </StyledCardContentInner>\n    </Card>\n  );\n};\n\nconst StyledCardTitle = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: ${(props) => props.theme.spacing[2]}px;\n`;\n\nconst StyledDesc = styled.span`\n  //color: ${(props) => props.theme.color.grey[300]};\n  text-align: center;\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding: ${(props) => props.theme.spacing[2]}px;\n`;\n\nexport default ExchangeStat;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\n//import ERC20 from '../bomb-finance/ERC20';\nimport useBombFinance from './useBombFinance';\n//import config from '../config';\n\nconst useBondsPurchasable = () => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchBondsPurchasable() {\n      try {\n        setBalance(await bombFinance.getBondsPurchasable());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBondsPurchasable();\n  }, [setBalance, bombFinance]);\n\n  return balance;\n};\n\nexport default useBondsPurchasable;\n","import React, {useCallback, useMemo} from 'react';\nimport Page from '../../components/Page';\nimport {createGlobalStyle} from 'styled-components';\nimport {Route, Switch, useRouteMatch} from 'react-router-dom';\nimport PageHeader from '../../components/PageHeader';\nimport ExchangeCard from './components/ExchangeCard';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport useBondStats from '../../hooks/useBondStats';\n//import useBombStats from '../../hooks/useBombStats';\nimport useBombFinance from '../../hooks/useBombFinance';\nimport useCashPriceInLastTWAP from '../../hooks/useCashPriceInLastTWAP';\nimport {useTransactionAdder} from '../../state/transactions/hooks';\nimport ExchangeStat from './components/ExchangeStat';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport useBondsPurchasable from '../../hooks/useBondsPurchasable';\nimport {getDisplayBalance} from '../../utils/formatBalance';\nimport { BOND_REDEEM_PRICE, BOND_REDEEM_PRICE_BN } from '../../bomb-finance/constants';\nimport { Alert } from '@material-ui/lab';\n\n\nimport HomeImage from '../../assets/img/background.jpg';\nimport { Grid, Box } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\n\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | Bonds'\n\nconst Bond: React.FC = () => {\n  const {path} = useRouteMatch();\n  const bombFinance = useBombFinance();\n  const addTransaction = useTransactionAdder();\n  const bondStat = useBondStats();\n  //const bombStat = useBombStats();\n  const cashPrice = useCashPriceInLastTWAP();\n\n  const bondsPurchasable = useBondsPurchasable();\n\n  const bondBalance = useTokenBalance(bombFinance?.BBOND);\n  //const scalingFactor = useMemo(() => (cashPrice ? Number(cashPrice) : null), [cashPrice]);\n\n  const handleBuyBonds = useCallback(\n    async (amount: string) => {\n      const tx = await bombFinance.buyBonds(amount);\n      addTransaction(tx, {\n        summary: `Buy ${Number(amount).toFixed(2)} BBOND with ${amount} BOMB`,\n      });\n    },\n    [bombFinance, addTransaction],\n  );\n\n  const handleRedeemBonds = useCallback(\n    async (amount: string) => {\n      const tx = await bombFinance.redeemBonds(amount);\n      addTransaction(tx, {summary: `Redeem ${amount} BBOND`});\n    },\n    [bombFinance, addTransaction],\n  );\n  const isBondRedeemable = useMemo(() => cashPrice.gt(BOND_REDEEM_PRICE_BN), [cashPrice]);\n  const isBondPurchasable = useMemo(() => Number(bondStat?.tokenInFtm) < 1.01, [bondStat]);\n  const isBondPayingPremium = useMemo(() => Number(bondStat?.tokenInFtm) >= 1.1, [bondStat]);\n// console.log(\"bondstat\", Number(bondStat?.tokenInFtm))\n  const bondScale = (Number(cashPrice) / 100000000000000).toFixed(4); \n\n  return (\n    <Switch>\n      <Page>\n        <BackgroundImage />\n              <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n            <Route exact path={path}>\n              <PageHeader icon={'💣'} title=\"Buy &amp; Redeem Bonds\" subtitle=\"Earn premiums upon redemption\" />\n            </Route>\n            {isBondPayingPremium === false ? (\n\n\n              <Box mt={5}>\n                <Grid item xs={12} sm={12} justify=\"center\" style={{ margin: '18px', display: 'flex' }}>\n                <Alert variant=\"filled\" severity=\"error\">\n                    <b>\n                      Claiming below 1.1 peg will not receive a redemption bonus, claim wisely!</b>\n              </Alert>\n            \n              </Grid>\n              </Box>\n            ) : <></>}\n          \n            <StyledBond>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Purchase\"\n                  fromToken={bombFinance.BOMB}\n                  fromTokenName=\"BOMB\"\n                  toToken={bombFinance.BBOND}\n                  toTokenName=\"BBOND\"\n                  priceDesc={\n                    !isBondPurchasable\n                      ? 'BOMB is over peg'\n                      : getDisplayBalance(bondsPurchasable, 18, 4) + ' BBOND available for purchase'\n                  }\n                  onExchange={handleBuyBonds}\n                  disabled={!bondStat || isBondRedeemable}\n                />\n              </StyledCardWrapper>\n              <StyledStatsWrapper>\n                <ExchangeStat\n                  tokenName=\"10,000 BOMB\"\n                  description=\"Last-Hour TWAP Price\"\n                  //price={Number(bombStat?.tokenInFtm).toFixed(4) || '-'}\n                 price={bondScale || '-'}\n\n                />\n                <Spacer size=\"md\" />\n                <ExchangeStat\n                  tokenName=\"10,000 BBOND\"\n                  description=\"Current Price: (BOMB)^2\"\n                  price={Number(bondStat?.tokenInFtm).toFixed(4) || '-'}\n                />\n              </StyledStatsWrapper>\n              <StyledCardWrapper>\n                <ExchangeCard\n                  action=\"Redeem\"\n                  fromToken={bombFinance.BBOND}\n                  fromTokenName=\"BBOND\"\n                  toToken={bombFinance.BOMB}\n                  toTokenName=\"BOMB\"\n                  priceDesc={`${getDisplayBalance(bondBalance)} BBOND Available in wallet`}\n                  onExchange={handleRedeemBonds}\n                  disabled={!bondStat || bondBalance.eq(0) || !isBondRedeemable}\n                  disabledDescription={!isBondRedeemable ? `Enabled when 10,000 BOMB > ${BOND_REDEEM_PRICE}BTC` : null}\n                />\n              </StyledCardWrapper>\n            </StyledBond>\n      </Page>\n    </Switch>\n  );\n};\n\nconst StyledBond = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst StyledStatsWrapper = styled.div`\n  display: flex;\n  flex: 0.8;\n  margin: 0 20px;\n  flex-direction: column;\n\n  @media (max-width: 768px) {\n    width: 80%;\n    margin: 16px 0;\n  }\n`;\n\nexport default Bond;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","module.exports = __webpack_public_path__ + \"static/media/background.3761c6a5.jpg\";","import { useEffect } from 'react';\n// import { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport { useWallet } from 'use-wallet';\n\nconst useEagerConnect = () => {\n  // const { login } = useAuth()\n  const { account, connect, connector } = useWallet();\n\n  if (account && window.localStorage.getItem('connectorId') === '') {\n    window.localStorage.setItem('connectorId', connector);\n  }\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem('connectorId');\n    if (connectorId && !account) {\n      connect(connectorId);\n    }\n  }, [connect, account]);\n};\n\nexport default useEagerConnect;\n","import React from 'react';\nimport {Container} from '@material-ui/core';\nimport useEagerConnect from '../../hooks/useEagerConnect';\n\nimport Footer from '../Footer';\nimport Nav from '../Nav';\n\nconst Page: React.FC = ({children}) => {\n  useEagerConnect();\n  return (\n    <div style={{position: 'relative', minHeight: '100vh'}}>\n      <Nav />\n      <Container maxWidth=\"lg\" style={{paddingBottom: '5rem'}}>\n        {children}\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Page;\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport AccountButton from '../Nav/AccountButton';\n\nconst UnlockWallet = () => {\n  return (\n    <Box style={{'textAlign': 'center', 'marginTop': '25px'}}>\n      <AccountButton />\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\n    </Box>\n  );\n};\n\nexport default UnlockWallet;\n"],"sourceRoot":""}